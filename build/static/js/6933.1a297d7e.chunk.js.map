{"version":3,"file":"static/js/6933.1a297d7e.chunk.js","mappings":"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","sources":["components/Scrollbar.tsx","components/topbar/NotificationDropdown.tsx","components/topbar/ProfileDropdown.tsx","layouts/Topbar/data.ts","layouts/Topbar/index.tsx","../node_modules/@restart/hooks/esm/useMergedRefs.js","../node_modules/@restart/ui/esm/DataKey.js","../node_modules/@restart/ui/esm/useWindow.js","../node_modules/dom-helpers/esm/addEventListener.js","../node_modules/dom-helpers/esm/canUseDOM.js","../node_modules/dom-helpers/esm/listen.js","../node_modules/dom-helpers/esm/ownerDocument.js","../node_modules/dom-helpers/esm/querySelectorAll.js","../node_modules/dom-helpers/esm/removeEventListener.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/react-bootstrap/esm/Badge.js","../node_modules/react-bootstrap/esm/Button.js","../node_modules/react-bootstrap/esm/InputGroupContext.js","../node_modules/dom-helpers/esm/camelize.js","../node_modules/react-bootstrap/esm/createWithBsPrefix.js","../node_modules/warning/warning.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import SimpleBar from 'simplebar-react';\n\ntype ScrollbarProps = SimpleBar.Props & {\n    className?: string;\n    style?: Record<string, unknown>;\n    children?: unknown;\n};\n\nconst Scrollbar = ({ className, style, children, ...otherProps }: ScrollbarProps) => {\n    return (\n        <SimpleBar className={className} style={style} {...otherProps}>\n            {children}\n        </SimpleBar>\n    );\n};\n\nexport default Scrollbar;\n","import { Badge, Dropdown } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\n// hooks\nimport { useToggle } from '../../hooks';\n\n// components\nimport Scrollbar from '../Scrollbar';\n\n// dummy data\nimport { Notification } from '../../layouts/types';\n\ntype NotificationDropdownProps = {\n    notifications: Notification[];\n};\n\nconst NotificationDropdown = ({ notifications }: NotificationDropdownProps) => {\n    const [isOpen, show, hide] = useToggle();\n\n    /*\n     * toggle apps-dropdown\n     */\n    const toggleDropdown = () => {\n        isOpen ? hide() : show();\n    };\n\n    return (\n        <Dropdown show={isOpen} onToggle={toggleDropdown}>\n            <Dropdown.Toggle variant=\"\" as=\"a\" className=\"nav-link waves-effect waves-light\" onClick={toggleDropdown}>\n                <i className=\"fe-bell noti-icon\"></i>\n                <Badge bg=\"danger\" className=\"rounded-circle noti-icon-badge\">\n                    9\n                </Badge>\n            </Dropdown.Toggle>\n\n            <Dropdown.Menu align=\"end\" className=\"dropdown-lg\">\n                <div onClick={toggleDropdown}>\n                    <Dropdown.Item as=\"div\" className=\"noti-title\">\n                        <h5 className=\"m-0\">\n                            <span className=\"float-end\">\n                                <Link to=\"#\" className=\"text-dark\">\n                                    <small>Clear All</small>\n                                </Link>\n                            </span>\n                            Notification\n                        </h5>\n                    </Dropdown.Item>\n                    <Scrollbar className=\"noti-scroll\">\n                        {(notifications || []).map((item, index) => {\n                            return (\n                                <Dropdown.Item key={index.toString()} className=\"notify-item\">\n                                    {item.avatar ? (\n                                        <>\n                                            <div className=\"notify-icon\">\n                                                <img src={item.avatar} alt=\"\" className=\"img-fluid rounded-circle\" />\n                                            </div>\n                                            <p className=\"notify-details\">{item.text}</p>\n                                            <p className=\"text-muted mb-0 user-msg\">\n                                                <small>{item.subText}</small>\n                                            </p>\n                                        </>\n                                    ) : (\n                                        <>\n                                            <div className={classNames('notify-icon', 'bg-' + item.bgColor)}>\n                                                <i className={item.icon}></i>\n                                            </div>\n                                            <p className=\"notify-details\">\n                                                {item.text} <small className=\"text-muted\">{item.subText}</small>\n                                            </p>\n                                        </>\n                                    )}\n                                </Dropdown.Item>\n                            );\n                        })}\n                    </Scrollbar>\n\n                    <Dropdown.Item className=\"text-center text-primary notify-item notify-all\">\n                        View All <i className=\"fe-arrow-right\"></i>\n                    </Dropdown.Item>\n                </div>\n            </Dropdown.Menu>\n        </Dropdown>\n    );\n};\n\nexport default NotificationDropdown;\n","import React from 'react';\nimport { Dropdown } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\n// hooks\nimport { useToggle } from '../../hooks/';\n\n// types\nimport { ProfileMenu } from '../../layouts/types';\n\ntype ProfileDropdownProps = {\n    userImage: string;\n    username: string;\n    menuItems: ProfileMenu[];\n};\n\nconst ProfileDropdown = ({ userImage, username, menuItems }: ProfileDropdownProps) => {\n    const [isOpen, show, hide] = useToggle();\n\n    /*\n     * toggle apps-dropdown\n     */\n    const toggleDropdown = () => {\n        isOpen ? hide() : show();\n    };\n\n    return (\n        <Dropdown show={isOpen} onToggle={toggleDropdown}>\n            <Dropdown.Toggle\n                as=\"a\"\n                variant=\"\"\n                className=\"nav-link nav-user me-0 waves-effect waves-light\"\n                id=\"page-header-user-dropdown\"\n                onClick={toggleDropdown}\n            >\n                <img src={userImage} alt=\"user\" className=\"rounded-circle\" />\n                <span className=\"pro-user-name ms-1\">\n                    {username} <i className=\"mdi mdi-chevron-down\"></i>\n                </span>\n            </Dropdown.Toggle>\n\n            <Dropdown.Menu align=\"end\" className=\"profile-dropdown\">\n                <div onClick={toggleDropdown}>\n                    <Dropdown.Header className=\"noti-title\">\n                        <h6 className=\"text-overflow m-0\">¡Bienvenid@!</h6>\n                    </Dropdown.Header>\n\n                    {(menuItems || []).map((menu, i) => {\n                        return (\n                            <React.Fragment key={i + '-menu'}>\n                                {i === menuItems.length - 1 && <Dropdown.Divider as=\"div\" />}\n                                <Link\n                                    to={menu.redirectTo}\n                                    className=\"dropdown-item notify-item\"\n                                    key={i + '-profile-menu'}\n                                >\n                                    <i className={classNames(menu.icon, 'me-1')}></i>\n                                    <span>{menu.label}</span>\n                                </Link>\n                            </React.Fragment>\n                        );\n                    })}\n                </div>\n            </Dropdown.Menu>\n        </Dropdown>\n    );\n};\n\nexport default ProfileDropdown;\n","import { Notification, ProfileMenu, SearchOptions } from '../types';\n\n// images\nimport avatar1 from '../../assets/images/users/user-1.jpg';\nimport avatar2 from '../../assets/images/users/user-2.jpg';\nimport avatar4 from '../../assets/images/users/user-4.jpg';\nimport avatar5 from '../../assets/images/users/user-5.jpg';\n\n// get the notifications\nconst notifications: Notification[] = [\n    {\n        id: 1,\n        text: 'Cristina Pride',\n        subText: 'Hi, How are you? What about our next meeting',\n        avatar: avatar1,\n    },\n    {\n        id: 2,\n        text: 'Caleb Flakelar commented on Admin',\n        subText: '1 min ago',\n        icon: 'mdi mdi-comment-account-outline',\n        bgColor: 'primary',\n    },\n    {\n        id: 3,\n        text: 'Karen Robinson',\n        subText: 'Wow ! this admin looks good and awesome design',\n        avatar: avatar4,\n    },\n    {\n        id: 4,\n        text: 'New user registered.',\n        subText: '5 hours ago',\n        icon: 'mdi mdi-account-plus',\n        bgColor: 'warning',\n    },\n    {\n        id: 5,\n        text: 'Caleb Flakelar commented on Admin',\n        subText: '1 min ago',\n        icon: 'mdi mdi-comment-account-outline',\n        bgColor: 'info',\n    },\n    {\n        id: 6,\n        text: 'Carlos Crouch liked Admin',\n        subText: '13 days ago',\n        icon: 'mdi mdi-heart',\n        bgColor: 'secondary',\n    },\n];\n\n// get the profilemenu\nconst profileMenus: ProfileMenu[] = [\n    {\n        label: 'Bloquear Pantalla',\n        icon: 'fe-lock',\n        redirectTo: '/auth/lock-screen',\n    },\n    {\n        label: 'Cerrar Sesion',\n        icon: 'fe-log-out',\n        redirectTo: '/auth/logout',\n    },\n];\n\nconst searchOptions: SearchOptions[] = [\n    { value: '1', label: 'Analytics Report', icon: 'fe-home', type: 'report' },\n    {\n        value: '2',\n        label: 'How can I help you?',\n        icon: 'fe-aperture',\n        type: 'help',\n    },\n    {\n        value: '3',\n        label: 'User profile settings',\n        icon: 'fe-settings',\n        type: 'settings',\n    },\n    {\n        label: 'Erwin E. Brown',\n        value: 'users1',\n        type: 'users',\n        userDetails: {\n            firstname: 'Erwin',\n            lastname: 'E. Brown',\n            position: 'UI Designer',\n            avatar: avatar2,\n        },\n    },\n    {\n        label: 'Jacob Deo',\n        value: 'users2',\n        type: 'users',\n        userDetails: {\n            firstname: 'Jacob',\n            lastname: 'Deo',\n            position: 'Developer',\n            avatar: avatar5,\n        },\n    },\n];\n\nexport { notifications, profileMenus, searchOptions };\n","import { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\n// constants\nimport { LayoutTypes } from '../../constants';\n\n// hooks\nimport { useRedux, useUser } from '../../hooks';\n\n// components\nimport NotificationDropdown from '../../components/topbar/NotificationDropdown';\nimport ProfileDropdown from '../../components/topbar/ProfileDropdown';\n\n// dummy data\nimport { notifications, profileMenus } from './data';\n\n// images\nimport logoSm from '../../assets/images/logo-sm.png';\nimport logoDark from '../../assets/images/logo-sm.png';\nimport logoLight from '../../assets/images/logo-light.png';\n\ntype TopbarProps = {\n    openLeftMenuCallBack: () => void;\n    containerClass?: string;\n};\n\nconst Topbar = ({ openLeftMenuCallBack, containerClass }: TopbarProps) => {\n    const {  appSelector } = useRedux();\n    const [isopen, setIsopen] = useState<boolean>(false);\n    const [loggedInUser] = useUser();\n    \n    const { layout, pageTitle } = appSelector((state) => ({\n        layout: state.Layout.layoutType,\n        pageTitle: state.PageTitle.pageTitle,\n    }));\n\n    /**\n     * Toggle the leftmenu when having mobile screen\n     */\n    const handleLeftMenuCallBack = () => {\n        setIsopen(!isopen);\n        if (openLeftMenuCallBack) openLeftMenuCallBack();\n    };\n\n    return (\n        <div className=\"navbar-custom\">\n            <div className={containerClass}>\n                <ul className=\"list-unstyled topnav-menu float-end mb-0\">\n\n                    <li className=\"dropdown notification-list topbar-dropdown\">\n                        <NotificationDropdown notifications={notifications} />\n                    </li>\n                    <li className=\"dropdown notification-list topbar-dropdown\">\n                        {/* User */}\n                        <ProfileDropdown userImage={loggedInUser.profile_picture_url} username={loggedInUser.name} menuItems={profileMenus} />\n                    </li>\n                    \n                </ul>\n\n                {/* LOGO  */}\n                <div className=\"logo-box\">\n                    <Link to=\"/\" className=\"logo logo-dark text-center\">\n                        <span className=\"logo-sm\">\n                            <img src={logoSm} alt=\"logo-sm\" height=\"22\" />\n                        </span>\n                        <span className=\"logo-lg pb-3\">\n                            <img src={logoDark} alt=\"logo-dark\" height=\"70\" />\n                            <h5 className=\"text-center\">Avaluos Gibson</h5>\n                        </span>\n                    </Link>\n\n                    <Link to=\"/\" className=\"logo logo-light text-center\">\n                        <span className=\"logo-sm\">\n                            <img src={logoSm} alt=\"logo-sm\" height=\"22\" />\n                        </span>\n                        <span className=\"logo-lg\">\n                            <img src={logoLight} alt=\"logo-light\" height=\"16\" />\n                        </span>\n                    </Link>\n                </div>\n\n                <ul className=\"list-unstyled topnav-menu topnav-menu-left mb-0\">\n                    {layout === LayoutTypes.LAYOUT_VERTICAL ? (\n                        <>\n                            {/* Mobile menu toggle (Vertical Layout) */}\n                            <li onClick={handleLeftMenuCallBack}>\n                                <button className=\"button-menu-mobile disable-btn waves-effect\">\n                                    <i className=\"fe-menu\"></i>\n                                </button>\n                            </li>\n                        </>\n                    ) : (\n                        <>\n                            {/* Mobile menu toggle (Horizontal Layout) */}\n                            <li>\n                                <Link\n                                    to=\"#\"\n                                    className={classNames('navbar-toggle nav-link', {\n                                        open: isopen,\n                                    })}\n                                    onClick={handleLeftMenuCallBack}\n                                >\n                                    <div className=\"lines\">\n                                        <span></span>\n                                        <span></span>\n                                        <span></span>\n                                    </div>\n                                </Link>\n                            </li>\n                        </>\n                    )}\n\n                    {layout === LayoutTypes.LAYOUT_VERTICAL && (\n                        <li>\n                            <h4 className=\"page-title-main\">{pageTitle.title}</h4>\n                        </li>\n                    )}\n                </ul>\n\n                <div className=\"clearfix\"></div>\n            </div>\n        </div>\n    );\n};\n\nexport default Topbar;\n","import { useMemo } from 'react';\n\nvar toFnRef = function toFnRef(ref) {\n  return !ref || typeof ref === 'function' ? ref : function (value) {\n    ref.current = value;\n  };\n};\n\nexport function mergeRefs(refA, refB) {\n  var a = toFnRef(refA);\n  var b = toFnRef(refB);\n  return function (value) {\n    if (a) a(value);\n    if (b) b(value);\n  };\n}\n/**\n * Create and returns a single callback ref composed from two other Refs.\n *\n * ```tsx\n * const Button = React.forwardRef((props, ref) => {\n *   const [element, attachRef] = useCallbackRef<HTMLButtonElement>();\n *   const mergedRef = useMergedRefs(ref, attachRef);\n *\n *   return <button ref={mergedRef} {...props}/>\n * })\n * ```\n *\n * @param refA A Callback or mutable Ref\n * @param refB A Callback or mutable Ref\n * @category refs\n */\n\nfunction useMergedRefs(refA, refB) {\n  return useMemo(function () {\n    return mergeRefs(refA, refB);\n  }, [refA, refB]);\n}\n\nexport default useMergedRefs;","export const ATTRIBUTE_PREFIX = `data-rr-ui-`;\nexport const PROPERTY_PREFIX = `rrUi`;\nexport function dataAttr(property) {\n  return `${ATTRIBUTE_PREFIX}${property}`;\n}\nexport function dataProp(property) {\n  return `${PROPERTY_PREFIX}${property}`;\n}","import { createContext, useContext } from 'react';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nconst Context = /*#__PURE__*/createContext(canUseDOM ? window : undefined);\nexport const WindowProvider = Context.Provider;\n/**\n * The document \"window\" placed in React context. Helpful for determining\n * SSR context, or when rendering into an iframe.\n *\n * @returns the current window\n */\n\nexport default function useWindow() {\n  return useContext(Context);\n}","/* eslint-disable no-return-assign */\nimport canUseDOM from './canUseDOM';\nexport var optionsSupported = false;\nexport var onceSupported = false;\n\ntry {\n  var options = {\n    get passive() {\n      return optionsSupported = true;\n    },\n\n    get once() {\n      // eslint-disable-next-line no-multi-assign\n      return onceSupported = optionsSupported = true;\n    }\n\n  };\n\n  if (canUseDOM) {\n    window.addEventListener('test', options, options);\n    window.removeEventListener('test', options, true);\n  }\n} catch (e) {\n  /* */\n}\n\n/**\n * An `addEventListener` ponyfill, supports the `once` option\n * \n * @param node the element\n * @param eventName the event name\n * @param handle the handler\n * @param options event options\n */\nfunction addEventListener(node, eventName, handler, options) {\n  if (options && typeof options !== 'boolean' && !onceSupported) {\n    var once = options.once,\n        capture = options.capture;\n    var wrappedHandler = handler;\n\n    if (!onceSupported && once) {\n      wrappedHandler = handler.__once || function onceHandler(event) {\n        this.removeEventListener(eventName, onceHandler, capture);\n        handler.call(this, event);\n      };\n\n      handler.__once = wrappedHandler;\n    }\n\n    node.addEventListener(eventName, wrappedHandler, optionsSupported ? options : capture);\n  }\n\n  node.addEventListener(eventName, handler, options);\n}\n\nexport default addEventListener;","export default !!(typeof window !== 'undefined' && window.document && window.document.createElement);","import addEventListener from './addEventListener';\nimport removeEventListener from './removeEventListener';\n\nfunction listen(node, eventName, handler, options) {\n  addEventListener(node, eventName, handler, options);\n  return function () {\n    removeEventListener(node, eventName, handler, options);\n  };\n}\n\nexport default listen;","/**\n * Returns the owner document of a given element.\n * \n * @param node the element\n */\nexport default function ownerDocument(node) {\n  return node && node.ownerDocument || document;\n}","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\n/**\n * Runs `querySelectorAll` on a given element.\n * \n * @param element the element\n * @param selector the selector\n */\n\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","/**\n * A `removeEventListener` ponyfill\n * \n * @param node the element\n * @param eventName the event name\n * @param handle the handler\n * @param options event options\n */\nfunction removeEventListener(node, eventName, handler, options) {\n  var capture = options && typeof options !== 'boolean' ? options.capture : options;\n  node.removeEventListener(eventName, handler, capture);\n\n  if (handler.__once) {\n    node.removeEventListener(eventName, handler.__once, capture);\n  }\n}\n\nexport default removeEventListener;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  bg: 'primary',\n  pill: false\n};\nconst Badge = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  bg,\n  pill,\n  text,\n  className,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, pill && `rounded-pill`, text && `text-${text}`, bg && `bg-${bg}`)\n  });\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant,\n  size,\n  active,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ...buttonProps,\n    ref: ref,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && props.disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'InputGroupContext';\nexport default context;","var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}","import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...props\n    });\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["className","style","children","otherProps","notifications","useToggle","isOpen","show","hide","toggleDropdown","Dropdown","onToggle","variant","as","onClick","Badge","bg","align","to","Scrollbar","map","item","index","avatar","src","alt","text","subText","classNames","bgColor","icon","toString","userImage","username","menuItems","id","menu","i","length","redirectTo","label","avatar1","avatar4","profileMenus","openLeftMenuCallBack","containerClass","appSelector","useRedux","useState","isopen","setIsopen","useUser","loggedInUser","state","layout","Layout","layoutType","pageTitle","PageTitle","handleLeftMenuCallBack","profile_picture_url","name","logoSm","height","logoDark","logoLight","LayoutTypes","open","title","toFnRef","ref","value","current","refA","refB","useMemo","a","b","mergeRefs","dataAttr","property","dataProp","Context","createContext","canUseDOM","window","undefined","Provider","useWindow","useContext","optionsSupported","onceSupported","options","passive","once","addEventListener","removeEventListener","e","node","eventName","handler","capture","wrappedHandler","__once","onceHandler","event","this","call","document","createElement","ownerDocument","toArray","Function","prototype","bind","slice","qsa","element","selector","querySelectorAll","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","elementType","instanceOf","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","React","bsPrefix","pill","Component","prefix","useBootstrapPrefix","_jsx","displayName","defaultProps","Button","size","active","useButtonProps","tagName","buttonProps","href","disabled","context","rHyphen","pascalCase","str","toUpperCase","replace","_","chr","createWithBsPrefix","BsComponent","Tag","resolvedPrefix","warning","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iterableToArray","unsupportedIterableToArray","TypeError"],"sourceRoot":""}