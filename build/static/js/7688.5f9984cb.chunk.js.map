{"version":3,"file":"static/js/7688.5f9984cb.chunk.js","mappings":"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","sources":["components/form/FormInput.tsx","components/form/VerticalForm.tsx","pages/apps/Projects/data.ts","pages/apps/Projects/index.tsx"],"sourcesContent":["import { useState, InputHTMLAttributes } from 'react';\nimport { Form, InputGroup } from 'react-bootstrap';\nimport classNames from 'classnames';\n\nimport { FieldErrors, Control } from 'react-hook-form';\n\ntype FormInputProps = InputHTMLAttributes<HTMLInputElement> & {\n    endIcon?: boolean;\n    label?: string;\n    type?: string;\n    name: string;\n    comp?: string;\n    placeholder?: string;\n    register?: any;\n    errors?: FieldErrors;\n    control?: Control<any>;\n    className?: string;\n    labelClassName?: string;\n    containerClass?: string;\n    textClassName?: string;\n    refCallback?: any;\n    action?: React.ReactNode;\n    rows?: number;\n};\n\n/* Password Input with addons */\nconst PasswordInput = ({\n    name,\n    placeholder,\n    refCallback,\n    errors,\n    control,\n    register,\n    className,\n    ...otherProps\n}: FormInputProps) => {\n    const [showPassword, setShowPassword] = useState<boolean>(false);\n\n    return (\n        <>\n            <InputGroup className=\"mb-0\">\n                <Form.Control\n                    type={showPassword ? 'text' : 'password'}\n                    placeholder={placeholder}\n                    name={name}\n                    id={name}\n                    as=\"input\"\n                    ref={(r: HTMLInputElement) => {\n                        if (refCallback) refCallback(r);\n                    }}\n                    className={className}\n                    isInvalid={errors && errors[name] ? true : false}\n                    {...(register ? register(name) : {})}\n                    autoComplete={name}\n                    {...otherProps}\n                />\n                <div\n                    className={classNames('input-group-text', 'input-group-password', {\n                        'show-password': showPassword,\n                    })}\n                    data-password={showPassword ? 'true' : 'false'}\n                >\n                    <span\n                        className=\"password-eye\"\n                        onClick={() => {\n                            setShowPassword(!showPassword);\n                        }}\n                    ></span>\n                </div>\n            </InputGroup>\n\n            {errors && errors[name] ? (\n                <Form.Control.Feedback type=\"invalid\" className=\"d-block\">\n                    {errors[name]['message']}\n                </Form.Control.Feedback>\n            ) : null}\n        </>\n    );\n};\n\n// textual form-controls—like inputs, passwords, textareas etc.\nconst TextualInput = ({\n    type,\n    name,\n    placeholder,\n    endIcon,\n    register,\n    errors,\n    comp,\n    rows,\n    className,\n    refCallback,\n    ...otherProps\n}: FormInputProps) => {\n    return (\n        <>\n            {type === 'password' && endIcon ? (\n                <>\n                    <PasswordInput\n                        name={name}\n                        placeholder={placeholder}\n                        refCallback={refCallback}\n                        errors={errors!}\n                        register={register}\n                        className={className}\n                        {...otherProps}\n                    />\n                </>\n            ) : (\n                <>\n                    <Form.Control\n                        type={type}\n                        placeholder={placeholder}\n                        name={name}\n                        as={comp}\n                        id={name}\n                        ref={(r: HTMLInputElement) => {\n                            if (refCallback) refCallback(r);\n                        }}\n                        className={className}\n                        isInvalid={errors && errors[name] ? true : false}\n                        {...(register ? register(name) : {})}\n                        rows={rows}\n                        {...otherProps}\n                    ></Form.Control>\n\n                    {errors && errors[name] ? (\n                        <Form.Control.Feedback type=\"invalid\" className=\"d-block\">\n                            {errors[name]['message']}\n                        </Form.Control.Feedback>\n                    ) : null}\n                </>\n            )}\n        </>\n    );\n};\n\n// non-textual checkbox and radio controls\nconst CheckInput = ({\n    type,\n    label,\n    name,\n    placeholder,\n    register,\n    errors,\n    comp,\n    rows,\n    className,\n    refCallback,\n    ...otherProps\n}: FormInputProps) => {\n    return (\n        <>\n            <Form.Check\n                type={type}\n                label={label}\n                name={name}\n                id={name}\n                ref={(r: HTMLInputElement) => {\n                    if (refCallback) refCallback(r);\n                }}\n                className={className}\n                isInvalid={errors && errors[name] ? true : false}\n                {...(register ? register(name) : {})}\n                {...otherProps}\n            />\n\n            {errors && errors[name] ? (\n                <Form.Control.Feedback type=\"invalid\" className=\"d-block\">\n                    {errors[name]['message']}\n                </Form.Control.Feedback>\n            ) : null}\n        </>\n    );\n};\n\n// handle select controls\nconst SelectInput = ({\n    type,\n    label,\n    name,\n    placeholder,\n    register,\n    errors,\n    comp,\n    className,\n    children,\n    refCallback,\n    ...otherProps\n}: FormInputProps) => {\n    return (\n        <>\n            <Form.Select\n                type={type}\n                label={label}\n                name={name}\n                id={name}\n                ref={(r: HTMLInputElement) => {\n                    if (refCallback) refCallback(r);\n                }}\n                children={children}\n                className={className}\n                isInvalid={errors && errors[name] ? true : false}\n                {...(register ? register(name) : {})}\n                {...otherProps}\n            />\n\n            {errors && errors[name] ? (\n                <Form.Control.Feedback type=\"invalid\">{errors[name]['message']}</Form.Control.Feedback>\n            ) : null}\n        </>\n    );\n};\n\nconst FormInput = ({\n    label,\n    type,\n    name,\n    placeholder,\n    endIcon,\n    register,\n    errors,\n    control,\n    className,\n    labelClassName,\n    containerClass,\n    refCallback,\n    children,\n    action,\n    rows,\n    ...otherProps\n}: FormInputProps) => {\n    // handle input type\n    const comp = type === 'textarea' ? 'textarea' : type === 'select' ? 'select' : 'input';\n\n    const hasEndIcon = endIcon !== undefined ? endIcon : true;\n\n    return (\n        <>\n            {type === 'hidden' ? (\n                <input type={type} name={name} {...(register ? register(name) : {})} {...otherProps} />\n            ) : (\n                <>\n                    {type === 'select' ? (\n                        <Form.Group className={containerClass}>\n                            {label ? (\n                                <>\n                                    <Form.Label className={labelClassName}>{label}</Form.Label>\n                                    {action && action}\n                                </>\n                            ) : null}\n\n                            <SelectInput\n                                type={type}\n                                name={name}\n                                placeholder={placeholder}\n                                refCallback={refCallback}\n                                errors={errors}\n                                register={register}\n                                comp={comp}\n                                className={className}\n                                children={children}\n                                {...otherProps}\n                            />\n                        </Form.Group>\n                    ) : (\n                        <>\n                            {type === 'checkbox' || type === 'radio' ? (\n                                <Form.Group className={containerClass}>\n                                    <CheckInput\n                                        type={type}\n                                        label={label}\n                                        name={name}\n                                        placeholder={placeholder}\n                                        refCallback={refCallback}\n                                        errors={errors}\n                                        register={register}\n                                        comp={comp}\n                                        className={className}\n                                        rows={rows}\n                                        {...otherProps}\n                                    />\n                                </Form.Group>\n                            ) : (\n                                <Form.Group className={containerClass}>\n                                    {label ? (\n                                        <>\n                                            <Form.Label className={labelClassName}>{label}</Form.Label>\n                                            {action && action}\n                                        </>\n                                    ) : null}\n\n                                    <TextualInput\n                                        type={type}\n                                        name={name}\n                                        placeholder={placeholder}\n                                        endIcon={hasEndIcon}\n                                        refCallback={refCallback}\n                                        errors={errors}\n                                        register={register}\n                                        comp={comp}\n                                        className={className}\n                                        rows={rows}\n                                        {...otherProps}\n                                    />\n                                </Form.Group>\n                            )}\n                        </>\n                    )}\n                </>\n            )}\n        </>\n    );\n};\n\nexport default FormInput;\n","import React from 'react';\nimport { useForm, Resolver, SubmitHandler, UnpackNestedValue, DeepPartial } from 'react-hook-form';\n\ntype VerticalFromProps<TFormValues> = {\n    defaultValues?: UnpackNestedValue<DeepPartial<TFormValues>>;\n    resolver?: Resolver<TFormValues>;\n    children?: React.ReactNode;\n    onSubmit: SubmitHandler<TFormValues>;\n    formClass?: string;\n};\n\nconst VerticalForm = <TFormValues extends Record<string, any> = Record<string, any>>({\n    defaultValues,\n    resolver,\n    children,\n    onSubmit,\n    formClass,\n}: VerticalFromProps<TFormValues>) => {\n    /*\n     * form methods\n     */\n    const methods = useForm<TFormValues>({ defaultValues, resolver });\n    const {\n        handleSubmit,\n        register,\n        control,\n        formState: { errors },\n    } = methods;\n\n    return (\n        <form onSubmit={handleSubmit(onSubmit)} className={formClass} noValidate>\n            {Array.isArray(children)\n                ? children.map((child) => {\n                      return child.props && child.props.name\n                          ? React.createElement(child.type, {\n                                ...{\n                                    ...child.props,\n                                    register,\n                                    key: child.props.name,\n                                    errors,\n                                    control,\n                                },\n                            })\n                          : child;\n                  })\n                : children}\n        </form>\n    );\n};\n\nexport default VerticalForm;\n","// types\nimport { ProjectsList } from './types';\n\n// images\nimport user1 from '../../../assets/images/users/user-1.jpg';\nimport user2 from '../../../assets/images/users/user-2.jpg';\nimport user3 from '../../../assets/images/users/user-3.jpg';\nimport user4 from '../../../assets/images/users/user-4.jpg';\nimport user5 from '../../../assets/images/users/user-5.jpg';\nimport user6 from '../../../assets/images/users/user-6.jpg';\nimport user7 from '../../../assets/images/users/user-7.jpg';\nimport user8 from '../../../assets/images/users/user-8.jpg';\nimport user9 from '../../../assets/images/users/user-9.jpg';\nimport user10 from '../../../assets/images/users/user-10.jpg';\n\nexport const projects: ProjectsList[] = [\n    {\n        id: 1,\n        title: 'New Admin Design',\n        category: 'WEB DESIGN',\n        state: 'Completed',\n        shortDesc:\n            'If several languages coalesce the grammar is more simple and regular than that of the individual languages...',\n        question: 56,\n        comment: 452,\n        teamMembers: [\n            {\n                image: user1,\n                name: 'Mat Helme',\n            },\n            {\n                image: user2,\n                name: 'Michael Zenaty',\n            },\n            {\n                image: user3,\n                name: 'James Anderson',\n            },\n            {\n                image: user4,\n                name: 'Mat Helme',\n            },\n            {\n                image: user5,\n                name: 'Username',\n            },\n        ],\n        progress: 80,\n        variant: 'success',\n    },\n    {\n        id: 2,\n        title: 'App Design and Develop',\n        category: 'ANDROID',\n        state: 'Completed',\n        shortDesc: 'New common language will be more simple and regular than the existing European languages...',\n        question: 77,\n        comment: 875,\n        teamMembers: [\n            {\n                image: user6,\n                name: 'Mat Helme',\n            },\n            {\n                image: user7,\n                name: 'Michael Zenaty',\n            },\n            {\n                image: user8,\n                name: 'James Anderson',\n            },\n        ],\n        progress: 45,\n        variant: 'primary',\n    },\n    {\n        id: 3,\n        title: 'Landing page Design',\n        category: 'WEB DESIGN',\n        state: 'Completed',\n        shortDesc:\n            'It will be as simple as occidental in fact it will be to an english person it will seem like simplified English...',\n        question: 87,\n        comment: 125,\n        teamMembers: [\n            {\n                image: user9,\n                name: 'Mat Helme',\n            },\n            {\n                image: user10,\n                name: 'Michael Zenaty',\n            },\n            {\n                image: user1,\n                name: 'James Anderson',\n            },\n            {\n                image: user3,\n                name: 'Mat Helme',\n            },\n        ],\n        progress: 68,\n        variant: 'pink',\n    },\n    {\n        id: 4,\n        title: 'App Design and Develop',\n        category: 'ANDROID',\n        state: 'Completed',\n        shortDesc:\n            'Everyone realizes why a new common language would be desirable one could refuse to pay expensive translators...',\n        question: 77,\n        comment: 875,\n        teamMembers: [\n            {\n                image: user5,\n                name: 'Mat Helme',\n            },\n            {\n                image: user8,\n                name: 'Michael Zenaty',\n            },\n            {\n                image: user9,\n                name: 'James Anderson',\n            },\n        ],\n        progress: 45,\n        variant: 'purple',\n    },\n    {\n        id: 5,\n        title: 'Landing page Design',\n        category: 'WEB DESIGN',\n        state: 'Completed',\n        shortDesc: 'At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium deleniti...',\n        question: 87,\n        comment: 125,\n        teamMembers: [\n            {\n                image: user3,\n                name: 'Mat Helme',\n            },\n            {\n                image: user4,\n                name: 'Michael Zenaty',\n            },\n            {\n                image: user5,\n                name: 'James Anderson',\n            },\n            {\n                image: user1,\n                name: 'Mat Helme',\n            },\n        ],\n        progress: 68,\n        variant: 'danger',\n    },\n    {\n        id: 6,\n        title: 'New Admin Design',\n        category: 'WEB DESIGN',\n        state: 'Completed',\n        shortDesc:\n            'Their separate existence is a myth. For science, music, sport, etc, Europe uses the same vocabulary....',\n        question: 56,\n        comment: 452,\n        teamMembers: [\n            {\n                image: user6,\n                name: 'Mat Helme',\n            },\n            {\n                image: user7,\n                name: 'Michael Zenaty',\n            },\n            {\n                image: user8,\n                name: 'James Anderson',\n            },\n        ],\n        progress: 80,\n        variant: 'warning',\n    },\n];\n","import { Link } from 'react-router-dom';\nimport { Badge, Card, Col, OverlayTrigger, ProgressBar, Row, Tooltip } from 'react-bootstrap';\nimport classNames from 'classnames';\n\n// hooks\nimport { usePageTitle } from '../../../hooks';\n\n// components\nimport { FormInput } from '../../../components/form';\n\n// types\nimport { ProjectsList } from './types';\n\n// dummy data\nimport { projects } from './data';\n\ntype SingleProjectProps = {\n    projects: ProjectsList[];\n};\n\nconst SingleProject = ({ projects }: SingleProjectProps) => {\n    return (\n        <Row>\n            {(projects || []).map((project, index) => {\n                return (\n                    <Col xl={4} key={index.toString()}>\n                        <Card>\n                            <Card.Body className=\"project-box\">\n                                <Badge bg={project.variant} className=\"float-end\">\n                                    {project.state}\n                                </Badge>\n                                <h4 className=\"mt-0\">\n                                    <Link to=\"#\" className=\"text-dark\">\n                                        {project.title}\n                                    </Link>\n                                </h4>\n                                <p className={classNames('text-' + project.variant, 'text-uppercase', 'font-13')}>\n                                    {project.category}\n                                </p>\n                                <p className=\"text-muted font-13\">\n                                    {project.shortDesc}\n                                    <Link to=\"#\" className=\"text-primary\">\n                                        View more\n                                    </Link>\n                                </p>\n\n                                <ul className=\"list-inline\">\n                                    <li className=\"list-inline-item me-4\">\n                                        <h4 className=\"mb-0\">{project.question}</h4>\n                                        <p className=\"text-muted\">Questions</p>\n                                    </li>\n                                    <li className=\"list-inline-item\">\n                                        <h4 className=\"mb-0\">{project.comment}</h4>\n                                        <p className=\"text-muted\">Comments</p>\n                                    </li>\n                                </ul>\n\n                                <div className=\"project-members mb-2\">\n                                    <h5 className=\"float-start me-3\">Team :</h5>\n                                    <div className=\"avatar-group\">\n                                        {(project.teamMembers || []).map((member, index) => {\n                                            return (\n                                                <OverlayTrigger\n                                                    key={index.toString()}\n                                                    placement=\"bottom\"\n                                                    overlay={<Tooltip id={member.name}>{member.name}</Tooltip>}\n                                                >\n                                                    <Link to=\"#\" className=\"avatar-group-item\">\n                                                        <img\n                                                            src={member.image}\n                                                            className=\"rounded-circle avatar-sm\"\n                                                            alt=\"\"\n                                                        />\n                                                    </Link>\n                                                </OverlayTrigger>\n                                            );\n                                        })}\n                                    </div>\n                                </div>\n\n                                <h5 className=\"mb-2 fw-semibold\">\n                                    Progress\n                                    <span className={classNames('float-end', 'text-' + project.variant)}>\n                                        {project.progress}%\n                                    </span>\n                                </h5>\n                                <ProgressBar\n                                    className={classNames('progress-bar-alt-' + project.variant, 'progress-sm')}\n                                >\n                                    <ProgressBar\n                                        variant={project.variant}\n                                        now={project.progress}\n                                        className=\"progress-animated\"\n                                    />\n                                </ProgressBar>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                );\n            })}\n        </Row>\n    );\n};\n\nconst Projects = () => {\n    // set pagetitle\n    usePageTitle({\n        title: 'Projects',\n        breadCrumbItems: [\n            {\n                path: 'apps/projects',\n                label: 'Apps',\n            },\n            {\n                path: 'apps/projects',\n                label: 'Projects',\n                active: true,\n            },\n        ],\n    });\n\n    return (\n        <>\n            <Row>\n                <Col sm={4}>\n                    <Link to=\"#\" className=\"btn btn-purple rounded-pill w-md waves-effect waves-light mb-3\">\n                        <i className=\"mdi mdi-plus me-1\"></i>\n                        Create Project\n                    </Link>\n                </Col>\n                <Col sm={8}>\n                    <div className=\"float-end\">\n                        <form className=\"row g-2 align-items-center mb-2 mb-sm-0\">\n                            <div className=\"col-auto\">\n                                <div className=\"d-flex\">\n                                    <label className=\"d-flex align-items-center\">\n                                        Phase\n                                        <FormInput\n                                            type=\"select\"\n                                            name=\"phase\"\n                                            containerClass=\"d-inline-block ms-2\"\n                                            className=\"form-select-sm\"\n                                        >\n                                            <option>All Projects(6)</option>\n                                            <option>completed</option>\n                                            <option>Progress</option>\n                                        </FormInput>\n                                    </label>\n                                </div>\n                            </div>\n                            <div className=\"col-auto\">\n                                <div className=\"d-flex\">\n                                    <label className=\"d-flex align-items-center\">\n                                        Sort\n                                        <FormInput\n                                            type=\"select\"\n                                            name=\"sort\"\n                                            containerClass=\"d-inline-block ms-2\"\n                                            className=\"form-select-sm\"\n                                        >\n                                            <option>Date</option>\n                                            <option>Name</option>\n                                            <option>End date</option>\n                                            <option>Start Date</option>\n                                        </FormInput>\n                                    </label>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </Col>\n            </Row>\n            <SingleProject projects={projects} />\n        </>\n    );\n};\n\nexport default Projects;\n"],"names":["PasswordInput","name","placeholder","refCallback","errors","register","control","className","otherProps","useState","showPassword","setShowPassword","type","id","as","ref","r","isInvalid","autoComplete","classNames","onClick","TextualInput","endIcon","comp","rows","CheckInput","label","SelectInput","children","labelClassName","containerClass","action","hasEndIcon","undefined","defaultValues","resolver","onSubmit","formClass","methods","useForm","handleSubmit","formState","noValidate","Array","isArray","map","child","props","React","key","projects","title","category","state","shortDesc","question","comment","teamMembers","image","user1","user2","user3","user4","user5","progress","variant","user6","user7","user8","user9","SingleProject","Row","project","index","Col","xl","Card","Badge","bg","to","member","OverlayTrigger","placement","overlay","Tooltip","src","alt","toString","ProgressBar","now","usePageTitle","breadCrumbItems","path","active","sm"],"sourceRoot":""}