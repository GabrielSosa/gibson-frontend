{"version":3,"file":"static/js/9905.875ce2e4.chunk.js","mappings":"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","sources":["components/form/FormInput.tsx","components/form/VerticalForm.tsx","pages/forms/Wizard.tsx"],"sourcesContent":["import { useState, InputHTMLAttributes } from 'react';\nimport { Form, InputGroup } from 'react-bootstrap';\nimport classNames from 'classnames';\n\nimport { FieldErrors, Control } from 'react-hook-form';\n\ntype FormInputProps = InputHTMLAttributes<HTMLInputElement> & {\n    endIcon?: boolean;\n    label?: string;\n    type?: string;\n    name: string;\n    comp?: string;\n    placeholder?: string;\n    register?: any;\n    errors?: FieldErrors;\n    control?: Control<any>;\n    className?: string;\n    labelClassName?: string;\n    containerClass?: string;\n    textClassName?: string;\n    refCallback?: any;\n    action?: React.ReactNode;\n    rows?: number;\n};\n\n/* Password Input with addons */\nconst PasswordInput = ({\n    name,\n    placeholder,\n    refCallback,\n    errors,\n    control,\n    register,\n    className,\n    ...otherProps\n}: FormInputProps) => {\n    const [showPassword, setShowPassword] = useState<boolean>(false);\n\n    return (\n        <>\n            <InputGroup className=\"mb-0\">\n                <Form.Control\n                    type={showPassword ? 'text' : 'password'}\n                    placeholder={placeholder}\n                    name={name}\n                    id={name}\n                    as=\"input\"\n                    ref={(r: HTMLInputElement) => {\n                        if (refCallback) refCallback(r);\n                    }}\n                    className={className}\n                    isInvalid={errors && errors[name] ? true : false}\n                    {...(register ? register(name) : {})}\n                    autoComplete={name}\n                    {...otherProps}\n                />\n                <div\n                    className={classNames('input-group-text', 'input-group-password', {\n                        'show-password': showPassword,\n                    })}\n                    data-password={showPassword ? 'true' : 'false'}\n                >\n                    <span\n                        className=\"password-eye\"\n                        onClick={() => {\n                            setShowPassword(!showPassword);\n                        }}\n                    ></span>\n                </div>\n            </InputGroup>\n\n            {errors && errors[name] ? (\n                <Form.Control.Feedback type=\"invalid\" className=\"d-block\">\n                    {errors[name]['message']}\n                </Form.Control.Feedback>\n            ) : null}\n        </>\n    );\n};\n\n// textual form-controls—like inputs, passwords, textareas etc.\nconst TextualInput = ({\n    type,\n    name,\n    placeholder,\n    endIcon,\n    register,\n    errors,\n    comp,\n    rows,\n    className,\n    refCallback,\n    ...otherProps\n}: FormInputProps) => {\n    return (\n        <>\n            {type === 'password' && endIcon ? (\n                <>\n                    <PasswordInput\n                        name={name}\n                        placeholder={placeholder}\n                        refCallback={refCallback}\n                        errors={errors!}\n                        register={register}\n                        className={className}\n                        {...otherProps}\n                    />\n                </>\n            ) : (\n                <>\n                    <Form.Control\n                        type={type}\n                        placeholder={placeholder}\n                        name={name}\n                        as={comp}\n                        id={name}\n                        ref={(r: HTMLInputElement) => {\n                            if (refCallback) refCallback(r);\n                        }}\n                        className={className}\n                        isInvalid={errors && errors[name] ? true : false}\n                        {...(register ? register(name) : {})}\n                        rows={rows}\n                        {...otherProps}\n                    ></Form.Control>\n\n                    {errors && errors[name] ? (\n                        <Form.Control.Feedback type=\"invalid\" className=\"d-block\">\n                            {errors[name]['message']}\n                        </Form.Control.Feedback>\n                    ) : null}\n                </>\n            )}\n        </>\n    );\n};\n\n// non-textual checkbox and radio controls\nconst CheckInput = ({\n    type,\n    label,\n    name,\n    placeholder,\n    register,\n    errors,\n    comp,\n    rows,\n    className,\n    refCallback,\n    ...otherProps\n}: FormInputProps) => {\n    return (\n        <>\n            <Form.Check\n                type={type}\n                label={label}\n                name={name}\n                id={name}\n                ref={(r: HTMLInputElement) => {\n                    if (refCallback) refCallback(r);\n                }}\n                className={className}\n                isInvalid={errors && errors[name] ? true : false}\n                {...(register ? register(name) : {})}\n                {...otherProps}\n            />\n\n            {errors && errors[name] ? (\n                <Form.Control.Feedback type=\"invalid\" className=\"d-block\">\n                    {errors[name]['message']}\n                </Form.Control.Feedback>\n            ) : null}\n        </>\n    );\n};\n\n// handle select controls\nconst SelectInput = ({\n    type,\n    label,\n    name,\n    placeholder,\n    register,\n    errors,\n    comp,\n    className,\n    children,\n    refCallback,\n    ...otherProps\n}: FormInputProps) => {\n    return (\n        <>\n            <Form.Select\n                type={type}\n                label={label}\n                name={name}\n                id={name}\n                ref={(r: HTMLInputElement) => {\n                    if (refCallback) refCallback(r);\n                }}\n                children={children}\n                className={className}\n                isInvalid={errors && errors[name] ? true : false}\n                {...(register ? register(name) : {})}\n                {...otherProps}\n            />\n\n            {errors && errors[name] ? (\n                <Form.Control.Feedback type=\"invalid\">{errors[name]['message']}</Form.Control.Feedback>\n            ) : null}\n        </>\n    );\n};\n\nconst FormInput = ({\n    label,\n    type,\n    name,\n    placeholder,\n    endIcon,\n    register,\n    errors,\n    control,\n    className,\n    labelClassName,\n    containerClass,\n    refCallback,\n    children,\n    action,\n    rows,\n    ...otherProps\n}: FormInputProps) => {\n    // handle input type\n    const comp = type === 'textarea' ? 'textarea' : type === 'select' ? 'select' : 'input';\n\n    const hasEndIcon = endIcon !== undefined ? endIcon : true;\n\n    return (\n        <>\n            {type === 'hidden' ? (\n                <input type={type} name={name} {...(register ? register(name) : {})} {...otherProps} />\n            ) : (\n                <>\n                    {type === 'select' ? (\n                        <Form.Group className={containerClass}>\n                            {label ? (\n                                <>\n                                    <Form.Label className={labelClassName}>{label}</Form.Label>\n                                    {action && action}\n                                </>\n                            ) : null}\n\n                            <SelectInput\n                                type={type}\n                                name={name}\n                                placeholder={placeholder}\n                                refCallback={refCallback}\n                                errors={errors}\n                                register={register}\n                                comp={comp}\n                                className={className}\n                                children={children}\n                                {...otherProps}\n                            />\n                        </Form.Group>\n                    ) : (\n                        <>\n                            {type === 'checkbox' || type === 'radio' ? (\n                                <Form.Group className={containerClass}>\n                                    <CheckInput\n                                        type={type}\n                                        label={label}\n                                        name={name}\n                                        placeholder={placeholder}\n                                        refCallback={refCallback}\n                                        errors={errors}\n                                        register={register}\n                                        comp={comp}\n                                        className={className}\n                                        rows={rows}\n                                        {...otherProps}\n                                    />\n                                </Form.Group>\n                            ) : (\n                                <Form.Group className={containerClass}>\n                                    {label ? (\n                                        <>\n                                            <Form.Label className={labelClassName}>{label}</Form.Label>\n                                            {action && action}\n                                        </>\n                                    ) : null}\n\n                                    <TextualInput\n                                        type={type}\n                                        name={name}\n                                        placeholder={placeholder}\n                                        endIcon={hasEndIcon}\n                                        refCallback={refCallback}\n                                        errors={errors}\n                                        register={register}\n                                        comp={comp}\n                                        className={className}\n                                        rows={rows}\n                                        {...otherProps}\n                                    />\n                                </Form.Group>\n                            )}\n                        </>\n                    )}\n                </>\n            )}\n        </>\n    );\n};\n\nexport default FormInput;\n","import React from 'react';\nimport { useForm, Resolver, SubmitHandler, UnpackNestedValue, DeepPartial } from 'react-hook-form';\n\ntype VerticalFromProps<TFormValues> = {\n    defaultValues?: UnpackNestedValue<DeepPartial<TFormValues>>;\n    resolver?: Resolver<TFormValues>;\n    children?: React.ReactNode;\n    onSubmit: SubmitHandler<TFormValues>;\n    formClass?: string;\n};\n\nconst VerticalForm = <TFormValues extends Record<string, any> = Record<string, any>>({\n    defaultValues,\n    resolver,\n    children,\n    onSubmit,\n    formClass,\n}: VerticalFromProps<TFormValues>) => {\n    /*\n     * form methods\n     */\n    const methods = useForm<TFormValues>({ defaultValues, resolver });\n    const {\n        handleSubmit,\n        register,\n        control,\n        formState: { errors },\n    } = methods;\n\n    return (\n        <form onSubmit={handleSubmit(onSubmit)} className={formClass} noValidate>\n            {Array.isArray(children)\n                ? children.map((child) => {\n                      return child.props && child.props.name\n                          ? React.createElement(child.type, {\n                                ...{\n                                    ...child.props,\n                                    register,\n                                    key: child.props.name,\n                                    errors,\n                                    control,\n                                },\n                            })\n                          : child;\n                  })\n                : children}\n        </form>\n    );\n};\n\nexport default VerticalForm;\n","import { useState } from 'react';\nimport { Row, Col, Card, Form, Button, ProgressBar, Tab, Nav } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { Wizard, Steps, Step } from 'react-albus';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useForm } from 'react-hook-form';\n\n// hooks\nimport { usePageTitle } from '../../hooks';\n\n// components\nimport { FormInput } from '../../components/form/';\n\nconst BasicWizard = () => {\n    // active tab key\n    const [key, setKey] = useState<string | null>('account');\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mb-3\"> Basic Wizard</h4>\n\n                <Wizard>\n                    <Steps>\n                        <Tab.Container\n                            id=\"left-tabs-example\"\n                            defaultActiveKey=\"account\"\n                            activeKey={key ? key : 'account'}\n                            onSelect={(k) => setKey(k)}\n                        >\n                            <Nav variant=\"pills\" as=\"ul\" className=\"nav-justified bg-light form-wizard-header mb-4\">\n                                <Nav.Item as=\"li\">\n                                    <Nav.Link as={Link} to=\"#\" eventKey=\"account\" className=\"rounded-0 pt-2 pb-2\">\n                                        <i className=\"mdi mdi-account-circle me-1\"></i>\n                                        <span className=\"d-none d-sm-inline\">Account</span>\n                                    </Nav.Link>\n                                </Nav.Item>\n                                <Nav.Item as=\"li\">\n                                    <Nav.Link as={Link} to=\"#\" eventKey=\"profile\" className=\"rounded-0 pt-2 pb-2\">\n                                        <i className=\"mdi mdi-face-profile me-1\"></i>\n                                        <span className=\"d-none d-sm-inline\">Profile</span>\n                                    </Nav.Link>\n                                </Nav.Item>\n                                <Nav.Item as=\"li\">\n                                    <Nav.Link as={Link} to=\"#\" eventKey=\"contact\" className=\"rounded-0 pt-2 pb-2\">\n                                        <i className=\"mdi mdi-checkbox-marked-circle-outline me-1\"></i>\n                                        <span className=\"d-none d-sm-inline\">Finish</span>\n                                    </Nav.Link>\n                                </Nav.Item>\n                            </Nav>\n                            <Tab.Content className=\"pb-0 mb-0 pt-0\">\n                                <Tab.Pane eventKey=\"account\">\n                                    <Step\n                                        id=\"account\"\n                                        render={({ next }) => (\n                                            <Form>\n                                                <Form.Group as={Row} className=\"mb-3\">\n                                                    <Form.Label htmlFor=\"uname\" column md={3}>\n                                                        User name\n                                                    </Form.Label>\n                                                    <Col md={9}>\n                                                        <Form.Control\n                                                            type=\"text\"\n                                                            name=\"uname\"\n                                                            id=\"uname\"\n                                                            defaultValue=\"Coderthemes\"\n                                                        />\n                                                    </Col>\n                                                </Form.Group>\n\n                                                <Form.Group as={Row} className=\"mb-3\">\n                                                    <Form.Label htmlFor=\"examplePassword\" column md={3}>\n                                                        Password\n                                                    </Form.Label>\n                                                    <Col md={9}>\n                                                        <Form.Control\n                                                            type=\"password\"\n                                                            name=\"examplePassword\"\n                                                            id=\"examplePassword1\"\n                                                            defaultValue=\"12345\"\n                                                        />\n                                                    </Col>\n                                                </Form.Group>\n\n                                                <Form.Group as={Row} className=\"mb-3\">\n                                                    <Form.Label htmlFor=\"examplerePassword\" column md={3}>\n                                                        Re-Password\n                                                    </Form.Label>\n                                                    <Col md={9}>\n                                                        <Form.Control\n                                                            type=\"password\"\n                                                            name=\"exampleRepassword\"\n                                                            id=\"examplerePassword1\"\n                                                            defaultValue=\"12345\"\n                                                        />\n                                                    </Col>\n                                                </Form.Group>\n\n                                                <ul className=\"pager wizard mb-0 list-inline text-end mt-2\">\n                                                    <li className=\"next list-inline-item\">\n                                                        <Button\n                                                            onClick={() => {\n                                                                setKey('profile');\n                                                                next();\n                                                            }}\n                                                            variant=\"secondary\"\n                                                        >\n                                                            Next\n                                                        </Button>\n                                                    </li>\n                                                </ul>\n                                            </Form>\n                                        )}\n                                    />\n                                </Tab.Pane>\n                                <Tab.Pane eventKey=\"profile\">\n                                    <Step\n                                        id=\"profile\"\n                                        render={({ next, previous }) => (\n                                            <Form>\n                                                <Form.Group as={Row} className=\"mb-3\">\n                                                    <Form.Label htmlFor=\"fname\" column md={3}>\n                                                        First name\n                                                    </Form.Label>\n                                                    <Col md={9}>\n                                                        <Form.Control\n                                                            type=\"text\"\n                                                            name=\"fname\"\n                                                            id=\"fname1\"\n                                                            defaultValue={'Francis'}\n                                                        />\n                                                    </Col>\n                                                </Form.Group>\n\n                                                <Form.Group as={Row} className=\"mb-3\">\n                                                    <Form.Label htmlFor=\"lname\" column md={3}>\n                                                        Last name\n                                                    </Form.Label>\n                                                    <Col md={9}>\n                                                        <Form.Control\n                                                            type=\"text\"\n                                                            name=\"lname\"\n                                                            id=\"lname1\"\n                                                            defaultValue={'Brinkman'}\n                                                        />\n                                                    </Col>\n                                                </Form.Group>\n\n                                                <Form.Group as={Row} className=\"mb-3\">\n                                                    <Form.Label htmlFor=\"phone\" column md={3}>\n                                                        Email\n                                                    </Form.Label>\n                                                    <Col md={9}>\n                                                        <Form.Control\n                                                            type=\"email\"\n                                                            name=\"exampleemail\"\n                                                            id=\"exampleemail\"\n                                                            defaultValue={'cory1979@hotmail.com'}\n                                                        />\n                                                    </Col>\n                                                </Form.Group>\n\n                                                <ul className=\"pager wizard mb-0 list-inline mt-2\">\n                                                    <li className=\"previous list-inline-item\">\n                                                        <Button\n                                                            onClick={() => {\n                                                                setKey('account');\n                                                                previous();\n                                                            }}\n                                                            variant=\"secondary\"\n                                                        >\n                                                            Previous\n                                                        </Button>\n                                                    </li>\n                                                    <li className=\"next list-inline-item float-end\">\n                                                        <Button\n                                                            onClick={() => {\n                                                                setKey('contact');\n                                                                next();\n                                                            }}\n                                                            variant=\"secondary\"\n                                                        >\n                                                            Next\n                                                        </Button>\n                                                    </li>\n                                                </ul>\n                                            </Form>\n                                        )}\n                                    />\n                                </Tab.Pane>\n                                <Tab.Pane eventKey=\"contact\">\n                                    <Step\n                                        id=\"contact\"\n                                        render={({ previous }) => (\n                                            <Form>\n                                                <Row>\n                                                    <Col sm={12}>\n                                                        <div className=\"text-center\">\n                                                            <h2 className=\"mt-0\">\n                                                                <i className=\"mdi mdi-check-all\"></i>\n                                                            </h2>\n                                                            <h3 className=\"mt-0\">Thank you !</h3>\n\n                                                            <p className=\"w-75 mb-2 mx-auto\">\n                                                                Quisque nec turpis at urna dictum luctus. Suspendisse\n                                                                convallis dignissim eros at volutpat. In egestas mattis\n                                                                dui. Aliquam mattis dictum aliquet.\n                                                            </p>\n\n                                                            <div className=\"mb-3\">\n                                                                <Form.Check\n                                                                    type=\"checkbox\"\n                                                                    id=\"check-box-1\"\n                                                                    className=\"d-inline-block\"\n                                                                >\n                                                                    <Form.Check.Input type=\"checkbox\" />{' '}\n                                                                    <Form.Check.Label>\n                                                                        I agree with the Terms and Conditions\n                                                                    </Form.Check.Label>\n                                                                </Form.Check>\n                                                            </div>\n                                                        </div>\n                                                    </Col>\n                                                </Row>\n                                                <ul className=\"pager wizard mb-0 list-inline\">\n                                                    <li className=\"previous list-inline-item\">\n                                                        <Button\n                                                            onClick={() => {\n                                                                setKey('profile');\n                                                                previous();\n                                                            }}\n                                                            variant=\"secondary\"\n                                                        >\n                                                            Previous\n                                                        </Button>\n                                                    </li>\n                                                    <li className=\"next list-inline-item float-end\">\n                                                        <Button variant=\"primary\">Submit</Button>\n                                                    </li>\n                                                </ul>\n                                            </Form>\n                                        )}\n                                    />\n                                </Tab.Pane>\n                            </Tab.Content>\n                        </Tab.Container>\n                    </Steps>\n                </Wizard>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst ButtonWizard = () => {\n    //active tab key\n    const [key, setKey] = useState<string | null>('account');\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mb-3\"> Button Wizard</h4>\n\n                <Wizard>\n                    <Steps>\n                        <Tab.Container\n                            id=\"left-tabs-example\"\n                            defaultActiveKey=\"account\"\n                            activeKey={key ? key : 'account'}\n                            onSelect={(k) => setKey(k)}\n                        >\n                            <Nav variant=\"pills\" as=\"ul\" className=\"nav-justified bg-light form-wizard-header mb-4\">\n                                <Nav.Item as=\"li\">\n                                    <Nav.Link as={Link} to=\"#\" eventKey=\"account\" className=\"rounded-0 pt-2 pb-2\">\n                                        <i className=\"mdi mdi-account-circle me-1\"></i>\n                                        <span className=\"d-none d-sm-inline\">Account</span>\n                                    </Nav.Link>\n                                </Nav.Item>\n                                <Nav.Item as=\"li\">\n                                    <Nav.Link as={Link} to=\"#\" eventKey=\"profile\" className=\"rounded-0 pt-2 pb-2\">\n                                        <i className=\"mdi mdi-face-profile me-1\"></i>\n                                        <span className=\"d-none d-sm-inline\">Profile</span>\n                                    </Nav.Link>\n                                </Nav.Item>\n                                <Nav.Item as=\"li\">\n                                    <Nav.Link as={Link} to=\"#\" eventKey=\"contact\" className=\"rounded-0 pt-2 pb-2\">\n                                        <i className=\"mdi mdi-checkbox-marked-circle-outline me-1\"></i>\n                                        <span className=\"d-none d-sm-inline\">Finish</span>\n                                    </Nav.Link>\n                                </Nav.Item>\n                            </Nav>\n                            <Tab.Content className=\"pb-0 mb-0 pt-0\">\n                                <Tab.Pane eventKey=\"account\">\n                                    <Step\n                                        id=\"account\"\n                                        render={({ next }) => (\n                                            <Form>\n                                                <Form.Group as={Row} className=\"mb-3\">\n                                                    <Form.Label htmlFor=\"uname2\" column md={3}>\n                                                        User name\n                                                    </Form.Label>\n                                                    <Col md={9}>\n                                                        <Form.Control\n                                                            type=\"text\"\n                                                            name=\"uname2\"\n                                                            id=\"uname2\"\n                                                            defaultValue=\"Coderthemes\"\n                                                        />\n                                                    </Col>\n                                                </Form.Group>\n\n                                                <Form.Group as={Row} className=\"mb-3\">\n                                                    <Form.Label htmlFor=\"examplePassword\" column md={3}>\n                                                        Password\n                                                    </Form.Label>\n                                                    <Col md={9}>\n                                                        <Form.Control\n                                                            type=\"password\"\n                                                            name=\"examplePassword\"\n                                                            id=\"examplePassword2\"\n                                                            placeholder=\"password placeholder\"\n                                                            defaultValue=\"12345\"\n                                                        />\n                                                    </Col>\n                                                </Form.Group>\n\n                                                <Form.Group as={Row} className=\"mb-3\">\n                                                    <Form.Label htmlFor=\"examplerePassword\" column md={3}>\n                                                        Re-Password\n                                                    </Form.Label>\n                                                    <Col md={9}>\n                                                        <Form.Control\n                                                            type=\"password\"\n                                                            name=\"exampleRepassword\"\n                                                            id=\"examplerePassword2\"\n                                                            placeholder=\"password\"\n                                                            defaultValue=\"12345\"\n                                                        />\n                                                    </Col>\n                                                </Form.Group>\n\n                                                <div className=\"float-end\">\n                                                    <Button\n                                                        onClick={() => {\n                                                            setKey('profile');\n                                                            next();\n                                                        }}\n                                                        variant=\"secondary\"\n                                                        className=\"button-next me-1\"\n                                                    >\n                                                        Next\n                                                    </Button>\n\n                                                    <Button\n                                                        onClick={() => {\n                                                            setKey('contact');\n                                                        }}\n                                                        variant=\"secondary\"\n                                                        className=\"button-last\"\n                                                    >\n                                                        Last\n                                                    </Button>\n                                                </div>\n                                                <div className=\"float-start\">\n                                                    <Button\n                                                        onClick={() => {\n                                                            setKey('account');\n                                                        }}\n                                                        variant=\"secondary\"\n                                                        className=\"button-first me-1\"\n                                                    >\n                                                        First\n                                                    </Button>\n\n                                                    <Button\n                                                        disabled={true}\n                                                        variant=\"secondary\"\n                                                        className=\"button-previous\"\n                                                    >\n                                                        Previous\n                                                    </Button>\n                                                </div>\n\n                                                <div className=\"clearfix\"></div>\n                                            </Form>\n                                        )}\n                                    />\n                                </Tab.Pane>\n                                <Tab.Pane eventKey=\"profile\">\n                                    <Step\n                                        id=\"profile\"\n                                        render={({ next, previous }) => (\n                                            <Form>\n                                                <Form.Group as={Row} className=\"mb-3\">\n                                                    <Form.Label htmlFor=\"fname2\" column md={3}>\n                                                        First name\n                                                    </Form.Label>\n                                                    <Col md={9}>\n                                                        <Form.Control\n                                                            type=\"text\"\n                                                            name=\"fname2\"\n                                                            id=\"fname2\"\n                                                            placeholder=\"Enter first name\"\n                                                        />\n                                                    </Col>\n                                                </Form.Group>\n\n                                                <Form.Group as={Row} className=\"mb-3\">\n                                                    <Form.Label htmlFor=\"lname2\" column md={3}>\n                                                        Last name\n                                                    </Form.Label>\n                                                    <Col md={9}>\n                                                        <Form.Control\n                                                            type=\"text\"\n                                                            name=\"lname2\"\n                                                            id=\"lname2\"\n                                                            placeholder=\"enter last name\"\n                                                        />\n                                                    </Col>\n                                                </Form.Group>\n\n                                                <Form.Group as={Row} className=\"mb-3\">\n                                                    <Form.Label htmlFor=\"exampleemail2\" column md={3}>\n                                                        Email\n                                                    </Form.Label>\n                                                    <Col md={9}>\n                                                        <Form.Control\n                                                            type=\"email\"\n                                                            name=\"exampleemail2\"\n                                                            id=\"exampleemail2\"\n                                                            defaultValue={'cory1979@hotmail.com'}\n                                                        />\n                                                    </Col>\n                                                </Form.Group>\n\n                                                <div className=\"float-end\">\n                                                    <Button\n                                                        onClick={() => {\n                                                            setKey('contact');\n                                                            next();\n                                                        }}\n                                                        variant=\"secondary\"\n                                                        className=\"button-next me-1\"\n                                                    >\n                                                        Next\n                                                    </Button>\n\n                                                    <Button\n                                                        onClick={() => {\n                                                            setKey('contact');\n                                                        }}\n                                                        variant=\"secondary\"\n                                                        className=\"button-last\"\n                                                    >\n                                                        Last\n                                                    </Button>\n                                                </div>\n                                                <div className=\"float-start\">\n                                                    <Button\n                                                        onClick={() => {\n                                                            setKey('account');\n                                                        }}\n                                                        variant=\"secondary\"\n                                                        className=\"button-first me-1\"\n                                                    >\n                                                        First\n                                                    </Button>\n\n                                                    <Button\n                                                        onClick={() => {\n                                                            setKey('account');\n                                                            previous();\n                                                        }}\n                                                        variant=\"secondary\"\n                                                        className=\"button-previous\"\n                                                    >\n                                                        Previous\n                                                    </Button>\n                                                </div>\n\n                                                <div className=\"clearfix\"></div>\n                                            </Form>\n                                        )}\n                                    />\n                                </Tab.Pane>\n                                <Tab.Pane eventKey=\"contact\">\n                                    <Step\n                                        id=\"contact\"\n                                        render={({ previous }) => (\n                                            <Form>\n                                                <Row>\n                                                    <Col sm={12}>\n                                                        <div className=\"text-center\">\n                                                            <h2 className=\"mt-0\">\n                                                                <i className=\"mdi mdi-check-all\"></i>\n                                                            </h2>\n                                                            <h3 className=\"mt-0\">Thank you !</h3>\n\n                                                            <p className=\"w-75 mb-2 mx-auto\">\n                                                                Quisque nec turpis at urna dictum luctus. Suspendisse\n                                                                convallis dignissim eros at volutpat. In egestas mattis\n                                                                dui. Aliquam mattis dictum aliquet.\n                                                            </p>\n\n                                                            <div className=\"mb-3\">\n                                                                <Form.Check\n                                                                    type=\"checkbox\"\n                                                                    id=\"check-box-2\"\n                                                                    className=\"d-inline-block\"\n                                                                >\n                                                                    <Form.Check.Input type=\"checkbox\" />{' '}\n                                                                    <Form.Check.Label>\n                                                                        I agree with the Terms and Conditions\n                                                                    </Form.Check.Label>\n                                                                </Form.Check>\n                                                            </div>\n                                                        </div>\n                                                    </Col>\n                                                </Row>\n                                                <div className=\"float-end\">\n                                                    <Button\n                                                        disabled={true}\n                                                        variant=\"secondary\"\n                                                        className=\"button-next me-1\"\n                                                    >\n                                                        Next\n                                                    </Button>\n\n                                                    <Button\n                                                        onClick={() => {\n                                                            setKey('contact');\n                                                        }}\n                                                        variant=\"secondary\"\n                                                        className=\"button-last\"\n                                                    >\n                                                        Last\n                                                    </Button>\n                                                </div>\n                                                <div className=\"float-start\">\n                                                    <Button\n                                                        onClick={() => {\n                                                            setKey('account');\n                                                        }}\n                                                        variant=\"secondary\"\n                                                        className=\"button-first me-1\"\n                                                    >\n                                                        First\n                                                    </Button>\n\n                                                    <Button\n                                                        onClick={() => {\n                                                            setKey('profile');\n                                                            previous();\n                                                        }}\n                                                        variant=\"secondary\"\n                                                        className=\"button-previous\"\n                                                    >\n                                                        Previous\n                                                    </Button>\n                                                </div>\n\n                                                <div className=\"clearfix\"></div>\n                                            </Form>\n                                        )}\n                                    />\n                                </Tab.Pane>\n                            </Tab.Content>\n                        </Tab.Container>\n                    </Steps>\n                </Wizard>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst WizardWithProgressbar = () => {\n    //active tab key\n    const [key, setKey] = useState<string | null>('account');\n    const tabs: string[] = ['account', 'profile', 'contact'];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mb-3\">Wizard with Progress bar</h4>\n\n                <Wizard\n                    render={({ step, steps }) => (\n                        <Steps>\n                            <Tab.Container\n                                id=\"left-tabs-example\"\n                                defaultActiveKey=\"account\"\n                                activeKey={key ? key : 'account'}\n                                onSelect={(k) => setKey(k)}\n                            >\n                                <Nav variant=\"pills\" as=\"ul\" className=\"nav-justified bg-light form-wizard-header mb-3\">\n                                    <Nav.Item as=\"li\">\n                                        <Nav.Link as={Link} to=\"#\" eventKey=\"account\" className=\"rounded-0 pt-2 pb-2\">\n                                            <i className=\"mdi mdi-account-circle me-1\"></i>\n                                            <span className=\"d-none d-sm-inline\">Account</span>\n                                        </Nav.Link>\n                                    </Nav.Item>\n                                    <Nav.Item as=\"li\">\n                                        <Nav.Link as={Link} to=\"#\" eventKey=\"profile\" className=\"rounded-0 pt-2 pb-2\">\n                                            <i className=\"mdi mdi-face-profile me-1\"></i>\n                                            <span className=\"d-none d-sm-inline\">Profile</span>\n                                        </Nav.Link>\n                                    </Nav.Item>\n                                    <Nav.Item as=\"li\">\n                                        <Nav.Link as={Link} to=\"#\" eventKey=\"contact\" className=\"rounded-0 pt-2 pb-2\">\n                                            <i className=\"mdi mdi-checkbox-marked-circle-outline me-1\"></i>\n                                            <span className=\"d-none d-sm-inline\">Finish</span>\n                                        </Nav.Link>\n                                    </Nav.Item>\n                                </Nav>\n                                <ProgressBar\n                                    animated\n                                    striped\n                                    variant=\"success\"\n                                    now={((tabs.indexOf(key!) + 1) / tabs.length) * 100}\n                                    className=\"mb-3\"\n                                    style={{ height: 7 }}\n                                />\n                                <Tab.Content className=\"pb-0 mb-0 pt-0\">\n                                    <Tab.Pane eventKey=\"account\">\n                                        <Step\n                                            id=\"account\"\n                                            render={({ next }) => (\n                                                <Form>\n                                                    <Form.Group as={Row} className=\"mb-3\">\n                                                        <Form.Label htmlFor=\"uname\" column md={3}>\n                                                            User name\n                                                        </Form.Label>\n                                                        <Col md={9}>\n                                                            <Form.Control\n                                                                type=\"text\"\n                                                                name=\"uname\"\n                                                                id=\"uname3\"\n                                                                defaultValue=\"Coderthemes\"\n                                                            />\n                                                        </Col>\n                                                    </Form.Group>\n\n                                                    <Form.Group as={Row} className=\"mb-3\">\n                                                        <Form.Label htmlFor=\"examplePassword\" column md={3}>\n                                                            Password\n                                                        </Form.Label>\n                                                        <Col md={9}>\n                                                            <Form.Control\n                                                                type=\"password\"\n                                                                name=\"examplePassword\"\n                                                                id=\"examplePassword3\"\n                                                                defaultValue=\"12345\"\n                                                            />\n                                                        </Col>\n                                                    </Form.Group>\n\n                                                    <Form.Group as={Row} className=\"mb-3\">\n                                                        <Form.Label htmlFor=\"examplerePassword\" column md={3}>\n                                                            Re-Password\n                                                        </Form.Label>\n                                                        <Col md={9}>\n                                                            <Form.Control\n                                                                type=\"password\"\n                                                                name=\"exampleRepassword\"\n                                                                id=\"examplerePassword3\"\n                                                                defaultValue=\"12345\"\n                                                            />\n                                                        </Col>\n                                                    </Form.Group>\n\n                                                    <ul className=\"pager wizard mb-0 list-inline text-end mt-2\">\n                                                        <li className=\"next list-inline-item\">\n                                                            <Button\n                                                                onClick={() => {\n                                                                    setKey('profile');\n                                                                    next();\n                                                                }}\n                                                                variant=\"secondary\"\n                                                            >\n                                                                Next\n                                                            </Button>\n                                                        </li>\n                                                    </ul>\n                                                </Form>\n                                            )}\n                                        />\n                                    </Tab.Pane>\n                                    <Tab.Pane eventKey=\"profile\">\n                                        <Step\n                                            id=\"profile\"\n                                            render={({ next, previous }) => (\n                                                <Form>\n                                                    <Form.Group as={Row} className=\"mb-3\">\n                                                        <Form.Label htmlFor=\"fname\" column md={3}>\n                                                            First name\n                                                        </Form.Label>\n                                                        <Col md={9}>\n                                                            <Form.Control\n                                                                type=\"text\"\n                                                                name=\"fname\"\n                                                                id=\"fname3\"\n                                                                defaultValue={'Francis'}\n                                                            />\n                                                        </Col>\n                                                    </Form.Group>\n\n                                                    <Form.Group as={Row} className=\"mb-3\">\n                                                        <Form.Label htmlFor=\"lname\" column md={3}>\n                                                            Last name\n                                                        </Form.Label>\n                                                        <Col md={9}>\n                                                            <Form.Control\n                                                                type=\"text\"\n                                                                name=\"lname\"\n                                                                id=\"lname3\"\n                                                                defaultValue={'Brinkman'}\n                                                            />\n                                                        </Col>\n                                                    </Form.Group>\n\n                                                    <Form.Group as={Row} className=\"mb-3\">\n                                                        <Form.Label htmlFor=\"phone\" column md={3}>\n                                                            Email\n                                                        </Form.Label>\n                                                        <Col md={9}>\n                                                            <Form.Control\n                                                                type=\"email\"\n                                                                name=\"exampleemail\"\n                                                                id=\"exampleemail3\"\n                                                                defaultValue={'cory1979@hotmail.com'}\n                                                            />\n                                                        </Col>\n                                                    </Form.Group>\n\n                                                    <ul className=\"pager wizard mb-0 list-inline mt-2\">\n                                                        <li className=\"previous list-inline-item\">\n                                                            <Button\n                                                                onClick={() => {\n                                                                    setKey('account');\n                                                                    previous();\n                                                                }}\n                                                                variant=\"secondary\"\n                                                            >\n                                                                Previous\n                                                            </Button>\n                                                        </li>\n                                                        <li className=\"next list-inline-item float-end\">\n                                                            <Button\n                                                                onClick={() => {\n                                                                    setKey('contact');\n                                                                    next();\n                                                                }}\n                                                                variant=\"secondary\"\n                                                            >\n                                                                Next\n                                                            </Button>\n                                                        </li>\n                                                    </ul>\n                                                </Form>\n                                            )}\n                                        />\n                                    </Tab.Pane>\n                                    <Tab.Pane eventKey=\"contact\">\n                                        <Step\n                                            id=\"contact\"\n                                            render={({ previous }) => (\n                                                <Form>\n                                                    <Row>\n                                                        <Col sm={12}>\n                                                            <div className=\"text-center\">\n                                                                <h2 className=\"mt-0\">\n                                                                    <i className=\"mdi mdi-check-all\"></i>\n                                                                </h2>\n                                                                <h3 className=\"mt-0\">Thank you !</h3>\n\n                                                                <p className=\"w-75 mb-2 mx-auto\">\n                                                                    Quisque nec turpis at urna dictum luctus.\n                                                                    Suspendisse convallis dignissim eros at volutpat. In\n                                                                    egestas mattis dui. Aliquam mattis dictum aliquet.\n                                                                </p>\n\n                                                                <div className=\"mb-3\">\n                                                                    <Form.Check\n                                                                        type=\"checkbox\"\n                                                                        id=\"check-box-3\"\n                                                                        className=\"d-inline-block\"\n                                                                    >\n                                                                        <Form.Check.Input type=\"checkbox\" />{' '}\n                                                                        <Form.Check.Label>\n                                                                            I agree with the Terms and Conditions\n                                                                        </Form.Check.Label>\n                                                                    </Form.Check>\n                                                                </div>\n                                                            </div>\n                                                        </Col>\n                                                    </Row>\n                                                    <ul className=\"pager wizard mb-0 list-inline\">\n                                                        <li className=\"previous list-inline-item\">\n                                                            <Button\n                                                                onClick={() => {\n                                                                    setKey('profile');\n                                                                    previous();\n                                                                }}\n                                                                variant=\"secondary\"\n                                                            >\n                                                                Previous\n                                                            </Button>\n                                                        </li>\n                                                        <li className=\"next list-inline-item float-end\">\n                                                            <Button variant=\"primary\">Submit</Button>\n                                                        </li>\n                                                    </ul>\n                                                </Form>\n                                            )}\n                                        />\n                                    </Tab.Pane>\n                                </Tab.Content>\n                            </Tab.Container>\n                        </Steps>\n                    )}\n                />\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst WizardWithFormValidation = () => {\n    //active tab key\n    const [key, setKey] = useState<string | null>('account');\n\n    /*\n     * form validation schema\n     */\n    const validationSchema = yupResolver(\n        yup.object().shape({\n            uname: yup.string().required(''),\n            password: yup.string().required(''),\n            rePassword: yup.string().required(''),\n        })\n    );\n    const validationSchema2 = yupResolver(\n        yup.object().shape({\n            firstname: yup.string().required(''),\n            lastname: yup.string().required(''),\n            exampleemail4: yup.string().required('').email('Enter valid email'),\n        })\n    );\n\n    const method1 = useForm<{ email: string; password: string; rePassword: string }>({\n        resolver: validationSchema,\n    });\n\n    const method2 = useForm<{ firstname: string; lastname: string; exampleemail4: string }>({\n        resolver: validationSchema2,\n    });\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mb-3\">Wizard with Validation</h4>\n\n                <Wizard\n                    render={({ step, steps }) => (\n                        <Steps>\n                            <Tab.Container\n                                id=\"left-tabs-example\"\n                                defaultActiveKey=\"account\"\n                                activeKey={key ? key : 'account'}\n                            >\n                                <Nav variant=\"pills\" as=\"ul\" className=\"nav-justified bg-light form-wizard-header mb-3\">\n                                    <Nav.Item as=\"li\">\n                                        <Nav.Link as={Link} to=\"#\" eventKey=\"account\" className=\"rounded-0 pt-2 pb-2\">\n                                            <i className=\"mdi mdi-account-circle me-1\"></i>\n                                            <span className=\"d-none d-sm-inline\">Account</span>\n                                        </Nav.Link>\n                                    </Nav.Item>\n                                    <Nav.Item as=\"li\">\n                                        <Nav.Link as={Link} to=\"#\" eventKey=\"profile\" className=\"rounded-0 pt-2 pb-2\">\n                                            <i className=\"mdi mdi-face-profile me-1\"></i>\n                                            <span className=\"d-none d-sm-inline\">Profile</span>\n                                        </Nav.Link>\n                                    </Nav.Item>\n                                    <Nav.Item as=\"li\">\n                                        <Nav.Link as={Link} to=\"#\" eventKey=\"contact\" className=\"rounded-0 pt-2 pb-2\">\n                                            <i className=\"mdi mdi-checkbox-marked-circle-outline me-1\"></i>\n                                            <span className=\"d-none d-sm-inline\">Finish</span>\n                                        </Nav.Link>\n                                    </Nav.Item>\n                                </Nav>\n                                <Tab.Content className=\"pb-0 mb-0 pt-0\">\n                                    <Tab.Pane eventKey=\"account\">\n                                        <Step\n                                            id=\"account\"\n                                            render={({ next }) => (\n                                                <form\n                                                    name=\"login-form\"\n                                                    id=\"login-form\"\n                                                    onSubmit={method1.handleSubmit(() => {\n                                                        setKey('profile');\n                                                        next();\n                                                    })}\n                                                >\n                                                    <Form.Group as={Row} className=\"mb-3\">\n                                                        <Form.Label column md={3}>\n                                                            Username\n                                                        </Form.Label>\n                                                        <Col md={9}>\n                                                            <FormInput\n                                                                type=\"text\"\n                                                                name=\"uname\"\n                                                                id=\"uname4\"\n                                                                register={method1.register}\n                                                                key=\"uname4\"\n                                                                errors={method1.formState.errors}\n                                                                control={method1.control}\n                                                            />\n                                                        </Col>\n                                                    </Form.Group>\n\n                                                    <Form.Group as={Row} className=\"mb-3\">\n                                                        <Form.Label column md={3}>\n                                                            Password\n                                                        </Form.Label>\n                                                        <Col md={9}>\n                                                            <FormInput\n                                                                type=\"password\"\n                                                                name=\"password\"\n                                                                endIcon={false}\n                                                                register={method1.register}\n                                                                key=\"password\"\n                                                                errors={method1.formState.errors}\n                                                                control={method1.control}\n                                                            />\n                                                        </Col>\n                                                    </Form.Group>\n\n                                                    <Form.Group as={Row} className=\"mb-3\">\n                                                        <Form.Label column md={3}>\n                                                            Re Password\n                                                        </Form.Label>\n                                                        <Col md={9}>\n                                                            <FormInput\n                                                                type=\"password\"\n                                                                name=\"rePassword\"\n                                                                endIcon={false}\n                                                                register={method1.register}\n                                                                key=\"repassword\"\n                                                                errors={method1.formState.errors}\n                                                                control={method1.control}\n                                                            />\n                                                        </Col>\n                                                    </Form.Group>\n\n                                                    <ul className=\"list-inline wizard mb-0\">\n                                                        <li className=\"next list-inline-item float-end\">\n                                                            <Button variant=\"secondary\" type=\"submit\">\n                                                                Next\n                                                            </Button>\n                                                        </li>\n                                                    </ul>\n                                                </form>\n                                            )}\n                                        />\n                                    </Tab.Pane>\n                                    <Tab.Pane eventKey=\"profile\">\n                                        <Step\n                                            id=\"profile\"\n                                            render={({ next, previous }) => (\n                                                <form\n                                                    name=\"profile-form\"\n                                                    id=\"profile-form\"\n                                                    onSubmit={method2.handleSubmit(() => {\n                                                        setKey('contact');\n                                                        next();\n                                                    })}\n                                                >\n                                                    <Form.Group as={Row} className=\"mb-3\">\n                                                        <Form.Label column md={3}>\n                                                            First Name\n                                                        </Form.Label>\n                                                        <Col md={9}>\n                                                            <FormInput\n                                                                type=\"text\"\n                                                                name=\"firstname\"\n                                                                register={method2.register}\n                                                                key=\"firstname\"\n                                                                errors={method2.formState.errors}\n                                                                control={method2.control}\n                                                            />\n                                                        </Col>\n                                                    </Form.Group>\n\n                                                    <Form.Group as={Row} className=\"mb-3\">\n                                                        <Form.Label column md={3}>\n                                                            Last Name\n                                                        </Form.Label>\n                                                        <Col md={9}>\n                                                            <FormInput\n                                                                type=\"text\"\n                                                                name=\"lastname\"\n                                                                register={method2.register}\n                                                                key=\"lastname\"\n                                                                errors={method2.formState.errors}\n                                                                control={method2.control}\n                                                            />\n                                                        </Col>\n                                                    </Form.Group>\n\n                                                    <Form.Group as={Row} className=\"mb-3\">\n                                                        <Form.Label column md={3}>\n                                                            Email\n                                                        </Form.Label>\n                                                        <Col md={9}>\n                                                            <FormInput\n                                                                type=\"email\"\n                                                                name=\"exampleemail4\"\n                                                                register={method2.register}\n                                                                key=\"exampleemail4\"\n                                                                errors={method2.formState.errors}\n                                                                control={method2.control}\n                                                            />\n                                                        </Col>\n                                                    </Form.Group>\n\n                                                    <ul className=\"list-inline wizard mb-0\">\n                                                        <li className=\"previous list-inline-item\">\n                                                            <Button\n                                                                onClick={() => {\n                                                                    setKey('account');\n                                                                    previous();\n                                                                }}\n                                                                variant=\"secondary\"\n                                                            >\n                                                                Previous\n                                                            </Button>\n                                                        </li>\n                                                        <li className=\"next list-inline-item float-end\">\n                                                            <Button variant=\"secondary\" type=\"submit\">\n                                                                Next\n                                                            </Button>\n                                                        </li>\n                                                    </ul>\n                                                </form>\n                                            )}\n                                        />\n                                    </Tab.Pane>\n                                    <Tab.Pane eventKey=\"contact\">\n                                        <Step\n                                            id=\"contact\"\n                                            render={({ previous }) => (\n                                                <Row>\n                                                    <Col sm={12}>\n                                                        <div className=\"text-center\">\n                                                            <h2 className=\"mt-0\">\n                                                                <i className=\"mdi mdi-check-all\"></i>\n                                                            </h2>\n                                                            <h3 className=\"mt-0\">Thank you !</h3>\n\n                                                            <p className=\"w-75 mb-2 mx-auto\">\n                                                                Quisque nec turpis at urna dictum luctus.Suspendisse\n                                                                convallis dignissim eros at volutpat.In egestas mattis\n                                                                dui.Aliquam mattis dictum aliquet.\n                                                            </p>\n\n                                                            <div className=\"mb-3\">\n                                                                <Form.Check\n                                                                    type=\"checkbox\"\n                                                                    id=\"check-box-4\"\n                                                                    className=\"d-inline-block\"\n                                                                >\n                                                                    <Form.Check.Input type=\"checkbox\" />{' '}\n                                                                    <Form.Check.Label>\n                                                                        I agree with the Terms and Conditions\n                                                                    </Form.Check.Label>\n                                                                </Form.Check>\n                                                            </div>\n                                                        </div>\n                                                    </Col>\n\n                                                    <Col sm={12}>\n                                                        <ul className=\"list-inline wizard mb-0\">\n                                                            <li className=\"previous list-inline-item\">\n                                                                <Button\n                                                                    onClick={() => {\n                                                                        setKey('profile');\n                                                                        previous();\n                                                                    }}\n                                                                    variant=\"secondary\"\n                                                                >\n                                                                    Previous\n                                                                </Button>\n                                                            </li>\n\n                                                            <li className=\"next list-inline-item float-end\">\n                                                                <Button variant=\"secondary\">Submit</Button>\n                                                            </li>\n                                                        </ul>\n                                                    </Col>\n                                                </Row>\n                                            )}\n                                        />\n                                    </Tab.Pane>\n                                </Tab.Content>\n                            </Tab.Container>\n                        </Steps>\n                    )}\n                />\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst FormWizard = () => {\n    // set pagetitle\n    usePageTitle({\n        title: 'Form Wizard',\n        breadCrumbItems: [\n            {\n                path: '/forms/wizard',\n                label: 'Forms',\n            },\n            {\n                path: '/forms/wizard',\n                label: 'Form Wizard',\n                active: true,\n            },\n        ],\n    });\n\n    return (\n        <>\n            <Row>\n                <Col xl={6}>\n                    <BasicWizard />\n                </Col>\n\n                <Col xl={6}>\n                    <ButtonWizard />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xl={6}>\n                    <WizardWithProgressbar />\n                </Col>\n                <Col lg={6}>\n                    <WizardWithFormValidation />\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default FormWizard;\n"],"names":["PasswordInput","name","placeholder","refCallback","errors","register","control","className","otherProps","useState","showPassword","setShowPassword","type","id","as","ref","r","isInvalid","autoComplete","classNames","onClick","TextualInput","endIcon","comp","rows","CheckInput","label","SelectInput","children","labelClassName","containerClass","action","hasEndIcon","undefined","defaultValues","resolver","onSubmit","formClass","methods","useForm","handleSubmit","formState","noValidate","Array","isArray","map","child","props","React","key","BasicWizard","setKey","defaultActiveKey","activeKey","onSelect","k","variant","Link","to","eventKey","render","next","Row","htmlFor","column","md","defaultValue","previous","sm","ButtonWizard","disabled","WizardWithProgressbar","tabs","step","steps","animated","striped","now","indexOf","length","style","height","WizardWithFormValidation","validationSchema","yupResolver","yup","shape","uname","required","password","rePassword","validationSchema2","firstname","lastname","exampleemail4","email","method1","method2","usePageTitle","title","breadCrumbItems","path","active","xl","lg"],"sourceRoot":""}