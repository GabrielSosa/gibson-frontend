{"version":3,"file":"static/js/4232.f492c336.chunk.js","mappings":"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","sources":["components/StatisticsWidget3.tsx","helpers/api/inspection.ts","pages/appraisal/inspection/inspectDetail.tsx","../node_modules/react-bootstrap/esm/createChainedFunction.js","../node_modules/react-bootstrap/esm/Collapse.js","../node_modules/react-simple-image-viewer/node_modules/style-inject/dist/style-inject.es.js","../node_modules/react-simple-image-viewer/src/ReactSimpleImageViewer.tsx"],"sourcesContent":["import classNames from 'classnames';\nimport { Card } from 'react-bootstrap';\n\ntype StatisticsWidget3Props = {\n    variant: string;\n    avatar: string;\n    name: string;\n    emailId: string;\n    position: string;\n};\n\nconst StatisticsWidget3 = ({ variant, avatar, name, emailId, position }: StatisticsWidget3Props) => {\n    return (\n        <Card>\n            <Card.Body className=\"widget-user\" style={{padding: \"10px\"}}>\n                <div className=\"d-flex align-items-center\">\n                    <div className=\"flex-shrink-0 avatar-lg me-3\">\n                        <img src={avatar} className=\"img-fluid rounded-circle\" alt=\"user\" />\n                    </div>\n                    <div className=\"flex-grow-1 overflow-hidden\">\n                        <h5 className=\"mt-0 mb-1\">{name}</h5>\n                        <p className=\"text-muted mb-2 font-13 text-truncate\">{emailId}</p>\n                        <small className={classNames('text-' + variant)}>\n                            <b>{position}</b>\n                        </small>\n                    </div>\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default StatisticsWidget3;\n","import { APICore } from './apiCore';\n\nconst api = new APICore();\n\nfunction getInspectionTemplate(params: any) {\n    const baseUrl = '/getInspectionTemplate';\n    return api.get(`${baseUrl}`, params);\n}\n\nfunction startInspection(params: any) {\n    const baseUrl = '/startInspection';\n    return api.create(`${baseUrl}`, params);\n}\n\nfunction endInspection(params: any) {\n    const baseUrl = '/endInspection';\n    return api.create(`${baseUrl}`, params);\n}\nfunction saveInspection(params: any) {\n    const baseUrl = '/saveInspection';\n    return api.create(`${baseUrl}`, params);\n}\nfunction getCerts(params: any) {\n    const baseUrl = '/certs';\n    return api.get(`${baseUrl}`, params);\n}\nfunction getCertPDF(params: any) {\n    const baseUrl = '/getCertPDF';\n    return api.create(`${baseUrl}`, params);\n}\n\nfunction cancelCert(params: any) {\n    const baseUrl = '/cert/cancel';\n    return api.create(`${baseUrl}`, params);\n}\n\nfunction validateCert(params: any) {\n    const baseUrl = '/cert/validate';\n    return api.create(`${baseUrl}`, params);\n}\nfunction saveCert(params: any) {\n    const baseUrl = '/cert/save';\n    return api.create(`${baseUrl}`, params);\n}\n\nfunction sendCertEmail(params: any) {\n    const baseUrl = '/cert/sendEmail';\n    return api.create(`${baseUrl}`, params);\n}\n\nexport { startInspection,sendCertEmail, endInspection, getInspectionTemplate, saveInspection, getCerts,getCertPDF, cancelCert,saveCert,validateCert };\n","import { Card, Col, Collapse, Form, InputGroup, Row } from 'react-bootstrap';\nimport { usePageTitle, useUser } from '../../../hooks';\nimport { useEffect, useCallback, useState } from 'react';\nimport Loader2 from '../../../components/Loader2';\nimport { Typeahead } from 'react-bootstrap-typeahead';\nimport { getBrands, getModelsByBrand } from '../../../helpers/api/carApi';\nimport { getAllVehicleTypes, getVehicleFields } from '../../../helpers/api/settings';\nimport { getVehicleByVin, saveImage } from '../../../helpers/api/reception';\nimport swal from 'sweetalert2';\nimport { getAppraisalDetail } from '../../../helpers/api/appraisal';\nimport { Link, useNavigate, useParams } from 'react-router-dom';\nimport ImageViewer from 'react-simple-image-viewer';\nimport { endInspection, getInspectionTemplate, saveInspection, startInspection } from '../../../helpers/api/inspection';\nimport Evaluate from '../appraisal/ecaluate';\nimport photoIcon from '../../../assets/images/photo.png';\nimport StatisticsWidget3 from '../../../components/StatisticsWidget3';\nimport { FormInput } from '../../../components/form';\n\nconst InspectionDetail = () => {\n    const params = useParams()\n    const [loading, setLoading] = useState(false);\n    const [isOpenV, setIsOpenV] = useState<boolean>(false);\n    const toggleV = () => setIsOpenV(!isOpenV);\n    const [isOpenP, setIsOpenP] = useState<boolean>(false);\n    const toggleP = () => setIsOpenP(!isOpenP);\n    const [appraisalData, setAppraisalData] = useState({} as any);\n    const [allVehicleTypes, setAllVehicleTypes] = useState<Array<any>>([])\n    const [vehicleTypeSelected, setVehicleTypeSelected] = useState<any[]>([]);\n    const [brands, setBrands] =  useState<any[]>([]);\n    const [selectedBrand, setSelectedBrand] = useState<any[]>([]);\n    const [models, setModels] =  useState<any[]>([]);\n    const [selectedModel, setSelectedModel] = useState<any[]>([]);\n    const [vehicleFields, setVehicleFields] = useState<any[]>([]);\n    const [templateData, setTemplateData] = useState([] as any);\n    const [loggedInUser] = useUser();\n    const navigate = useNavigate();\n    const [viewerImages, setViewerImages] = useState([] as any);\n    const [currentImage, setCurrentImage] = useState(0);\n    const [isViewerOpen, setIsViewerOpen] = useState(false);\n  \n    const openImageViewer = useCallback((index: any, images: any) => {\n        setViewerImages(images)\n        setCurrentImage(index);\n        setIsViewerOpen(true);\n    }, []);\n  \n    const closeImageViewer = () => {\n      setCurrentImage(0);\n      setIsViewerOpen(false);\n    };\n\n    \n    usePageTitle({\n        title: 'Detalle de inspección',\n        breadCrumbItems: [\n            {\n                path: '/appraisal/inspection',\n                label: 'Inspección',\n            },\n            {\n                path: '/appraisal/inspection',\n                label: 'Inspección',\n                active: true,\n            },\n        ],\n    });\n\n    const onChangeBrand = (n: any[]) => {\n        if(n.length > 0){\n            setSelectedBrand(n);\n            setAppraisalData({...appraisalData,vehicle: {...appraisalData.vehicle, brand: n[0].Make_Name}})\n            loadModels(n[0].Make_ID);\n            setSelectedModel([]);\n        }else{\n            setSelectedBrand([]);\n        }\n    };\n\n\n    const onChangeModel = (n: any[]) => {\n        if(n.length > 0){\n            setSelectedModel(n);\n            setAppraisalData({...appraisalData,vehicle: {...appraisalData.vehicle, model: n[0].Model_Name}})\n        }else{\n            setSelectedModel([]);\n        }\n    };\n\n    const loadBrands = async () => {\n        let response = await getBrands({})\n        setBrands(response.data.Results)\n    }\n\n    const loadModels = async (brandId:number) => {\n        let response = await getModelsByBrand(brandId)\n        setModels(response.data.Results)\n    }\n\n    const loadFields = async (vehicleTypeId: number) => {\n        let result = await getVehicleFields({vehicleTypeId: vehicleTypeId})\n        setVehicleFields(result.data.data)\n    }\n\n    const onChangeVehicleType = (vehicleTypes: any[]) => {\n        if(vehicleTypes.length > 0){\n            loadFields(vehicleTypes[0].vehicle_type_id)\n            setVehicleTypeSelected(vehicleTypes);\n            setAppraisalData({...appraisalData,vehicle_type: {...appraisalData.vehicle_type, vector: vehicleTypes[0].vector},vehicle: {...appraisalData.vehicle, vehicle_type_id: vehicleTypes[0].vehicle_type_id}})\n        } else {\n            setVehicleTypeSelected([])\n        }\n    };\n\n    const loadTemplate = async (id: any) => {\n        setLoading(true)\n        await loadVehicleTypes()\n        await loadBrands();\n\n        let result = await getInspectionTemplate({appraisalId: id})\n        if(result.data.meta.code === 200){\n            setTemplateData(result.data.data)\n        }else {\n            swal.fire(\"Error\",result.data.data.error.message,\"error\")\n        }\n\n        let resultAppraisal = await getAppraisalDetail({appraisalId: id})\n        if(resultAppraisal.data.meta.code === 200){\n            onChangeVehicleType([resultAppraisal.data.data.vehicle_type])\n            onChangeBrand([{Make_ID: 99999, Make_Name: resultAppraisal.data.data.vehicle.brand}])\n            onChangeModel([{Model_ID: 99999, Model_Name: resultAppraisal.data.data.vehicle.model}])\n            setAppraisalData(resultAppraisal.data.data)\n        }\n        setLoading(false)\n    }\n\n    const loadVehicleTypes = async () => {\n        let response = await getAllVehicleTypes({})\n        setAllVehicleTypes(response.data.data.map((vt: any) => {\n            return {...vt, status_color: \"success\"}\n        }))\n    }\n\n\n    useEffect(()=>{\n        console.log(loggedInUser)\n        loadTemplate(params[\"id\"])\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[])\n\n    const dataURItoBlob = (dataURI: any) => {\n        // convert base64 to raw binary data held in a string\n        // doesn't handle URLEncoded DataURIs - see SO answer #6850276 for code that does this\n        var byteString = atob(dataURI.split(',')[1]);\n    \n        // separate out the mime component\n        var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\n    \n        // write the bytes of the string to an ArrayBuffer\n        var ab = new ArrayBuffer(byteString.length);\n        var ia = new Uint8Array(ab);\n        for (var i = 0; i < byteString.length; i++) {\n            ia[i] = byteString.charCodeAt(i);\n        }\n    \n        //Old Code\n        //write the ArrayBuffer to a blob, and you're done\n        //var bb = new BlobBuilder();\n        //bb.append(ab);\n        //return bb.getBlob(mimeString);\n    \n        //New Code\n        return new Blob([ab], {type: mimeString});\n    \n    \n    }\n\n    const isInspector = () => {\n        \n        if((appraisalData.status && appraisalData.status !== \"Inspeccionado\") || loggedInUser.role === \"Admin\"){\n            if(appraisalData.inspected_for_one === loggedInUser.user_id || loggedInUser.role === \"Admin\") return true\n            if(appraisalData.inspected_for_two === loggedInUser.user_id || loggedInUser.role === \"Admin\") return true\n        }\n        return false\n    }\n\n    const allowEdit = () => {\n        return appraisalData.status === \"En inspección\" || loggedInUser.role === \"Admin\"\n    }\n\n    return <>\n        {appraisalData.status && <Row style={{marginTop: \"70px\"}} hidden={appraisalData.status === \"Recepcionado\"}>\n            <h4 className=\"header-title\"> Encargados de la inspección {allowEdit() ? \"true\": \"false\"}</h4>\n            {\n                appraisalData.inspectors.map((u: any) => {\n                    return <Col xl={4} md={4}>\n                        <StatisticsWidget3\n                            variant=\"warning\"\n                            avatar={u.profile_picture_url}\n                            name={u.name}\n                            emailId={u.email}\n                            position={u.user_type_name}\n                        />\n                    </Col>\n                })\n            }\n        </Row>}\n        <Row style={{marginTop: appraisalData.status === \"Recepcionado\" ? \"70px\":\"0px\"}}>\n            <Col lg={12}>\n                <Card>\n                    <Card.Body>\n                        <h4 className=\"header-title\" onClick={toggleV}> <i className={ isOpenV ? \"mdi mdi-chevron-down me-1\" : \"mdi mdi-chevron-right me-1\"}></i> Informacion del vehiculo</h4>\n                        <Collapse in={isOpenV}>\n                            <div>\n                                <Row>\n                                    <Col lg={3}>\n                                        <Form.Group className=\"mb-3\" controlId=\"validationCustom01\">\n                                            <Form.Label>Tipo de vehiculo</Form.Label>\n                                            <Typeahead\n                                                id=\"vehicleType\"\n                                                labelKey={'name'}\n                                                multiple={false}\n                                                maxResults={4}\n                                                onChange={onChangeVehicleType}\n                                                options={allVehicleTypes}\n                                                placeholder=\"Escoge un tipo de vehiculo\"\n                                                selected={vehicleTypeSelected}\n                                                disabled={!allowEdit() || !isInspector()}\n                                            />\n                                        </Form.Group>\n                                    </Col>\n                                    <Col lg={3}>\n                                        <Form.Group className=\"mb-3\" controlId=\"validationCustom01\">\n                                            <Form.Label>{(appraisalData.vehicle || {}).miles_type === \"miles\" ? \"Millaje\": \"Kilometraje\"}</Form.Label>\n                                            <InputGroup className=\"mb-2\">\n                                                <InputGroup.Text onClick={() => {\n                                                    if(allowEdit() && isInspector()){\n                                                        setAppraisalData({...appraisalData,vehicle: {...appraisalData.vehicle, miles_type: (appraisalData.vehicle || {}).miles_type === \"miles\" ? \"km\": \"miles\"}})\n                                                    }\n                                                }}>{(appraisalData.vehicle || {}).miles_type === \"miles\" ? \"Mi\": \"Km\"}</InputGroup.Text>\n                                                <Form.Control disabled={!allowEdit() || !isInspector()} value={(appraisalData.vehicle || {}).miles || \"\"} type=\"text\" onChange={async (e: any)=>{\n                                                    setAppraisalData({...appraisalData,vehicle: {...appraisalData.vehicle, miles: e.target.value}})\n                                                \n                                                }}/>\n                                            </InputGroup>\n                                        </Form.Group>\n                                    </Col>\n                                    <Col lg={3}>\n                                        <Form.Group className=\"mb-3\" controlId=\"validationCustom01\">\n                                            <Form.Label>Placa {allowEdit()}</Form.Label>\n                                            <Form.Control disabled={!allowEdit() || !isInspector()} value={(appraisalData.vehicle || {}).plate || \"\"} type=\"text\" onChange={async (e: any)=>{\n                                                setAppraisalData({...appraisalData,vehicle: {...appraisalData.vehicle, plate: e.target.value}})\n                                            \n                                            }}/>\n                                        </Form.Group>\n                                    </Col>\n                                    <Col lg={3}>\n                                        <Form.Group className=\"mb-3\" controlId=\"validationCustom01\">\n                                            <Form.Label>VIN</Form.Label>\n                                            <Form.Control disabled={!allowEdit() || !isInspector()} value={(appraisalData.vehicle || {}).vin || \"\"} type=\"text\" onChange={async (e: any)=>{\n                                                setAppraisalData({...appraisalData,vehicle: {...appraisalData.vehicle, vin: e.target.value}})\n                                            \n                                            }}  onBlur={async (e: any) => {\n\n                                                let result = await getVehicleByVin({vin: appraisalData.vehicle.vin})\n                                                if(result.data.data.vehicle_id){\n                                                    await swal.fire({\n                                                        title: 'Ya existe un vehiculo con esta vin',\n                                                        icon: 'info',\n                                                        showCancelButton: true,\n                                                        confirmButtonColor: '#28bb4b',\n                                                        cancelButtonColor: '#f34e4e',\n                                                        confirmButtonText: 'Entendido',\n                                                    })\n                                                }\n                                            }}/>\n                                        </Form.Group>\n                                    </Col>\n                                    <Col lg={3}>\n                                        <Form.Group className=\"mb-3\" controlId=\"validationCustom01\">\n                                            <Form.Label>Marca</Form.Label>\n                                            <Typeahead\n                                                id=\"brand\"\n                                                labelKey={'Make_Name'}\n                                                multiple={false}\n                                                maxResults={4}\n                                                options={brands}\n                                                allowNew={true}\n                                                onChange={onChangeBrand}\n                                                placeholder=\"Escoge una marca...\"\n                                                selected={selectedBrand}\n                                                disabled={!allowEdit() || !isInspector()}\n                                            />\n                                        </Form.Group>\n                                    </Col>\n                                    <Col lg={3}>\n                                        <Form.Group className=\"mb-3\" controlId=\"validationCustom01\">\n                                            <Form.Label>Modelo</Form.Label>\n                                            <Typeahead\n                                                id=\"model\"\n                                                labelKey={'Model_Name'}\n                                                multiple={false}\n                                                maxResults={4}\n                                                options={models}\n                                                allowNew={true}\n                                                onChange={onChangeModel}\n                                                selected={selectedModel}\n                                                placeholder=\"Escoge un modelo...\"\n                                                disabled={!allowEdit() || !isInspector()}\n                                            />\n                                        </Form.Group>\n                                    </Col>\n                                    <Col lg={3}>\n                                        <Form.Group className=\"mb-3\" controlId=\"validationCustom01\">\n                                            <Form.Label>Motor</Form.Label>\n                                            <Form.Control disabled={!allowEdit() || !isInspector()} value={(appraisalData.vehicle || {}).motor || \"\"} type=\"text\" onChange={async (e: any)=>{\n                                                setAppraisalData({...appraisalData,vehicle: {...appraisalData.vehicle, motor: e.target.value}})\n                                            \n                                            }}/>\n                                        </Form.Group>\n                                    </Col>\n                                    <Col lg={3}>\n                                        <Form.Group className=\"mb-3\" controlId=\"validationCustom01\">\n                                            <Form.Label>Año</Form.Label>\n                                            <Form.Control disabled={!allowEdit() || !isInspector()} value={(appraisalData.vehicle || {}).year || \"\"} type=\"text\" onChange={async (e: any)=>{\n                                                setAppraisalData({...appraisalData,vehicle: {...appraisalData.vehicle, year: e.target.value}})\n                                            \n                                            }}/>\n                                        </Form.Group>\n                                    </Col>\n                                    <Col lg={3}>\n                                        <Form.Group className=\"mb-3\" controlId=\"validationCustom01\">\n                                            <Form.Label>Rines</Form.Label>\n                                            <Form.Control disabled={!allowEdit() || !isInspector()} value={(appraisalData.vehicle || {}).wheels || \"\"} type=\"text\" onChange={async (e: any)=>{\n                                                setAppraisalData({...appraisalData,vehicle: {...appraisalData.vehicle, wheels: e.target.value}})\n                                            \n                                            }}/>\n                                        </Form.Group>\n                                    </Col>\n                                    <Col lg={3}>\n                                        <Form.Group className=\"mb-3\" controlId=\"validationCustom01\">\n                                            <Form.Label>Equipo de sonido</Form.Label>\n                                            <Form.Control disabled={!allowEdit() || !isInspector()} value={(appraisalData.vehicle || {}).eq_sound || \"\"} type=\"text\" onChange={async (e: any)=>{\n                                                setAppraisalData({...appraisalData,vehicle: {...appraisalData.vehicle, eq_sound: e.target.value}})\n                                            \n                                            }}/>\n                                        </Form.Group>\n                                    </Col>\n                                    {\n                                        vehicleFields.map((vf: any, key: number) => {\n                                            return <Col lg={3} key={key}>\n                                                <Form.Group className=\"mb-3\" controlId=\"validationCustom01\">\n                                                    <Form.Label>{vf.name}</Form.Label>\n                                                    <Form.Control disabled={!allowEdit() || !isInspector()} value={(((appraisalData.vehicle || {}).fields || {})[vf.name] || {}).value || \"\"} type=\"text\" onChange={async (e: any)=>{\n                                                        let tempApp = {...appraisalData,vehicle: {...appraisalData.vehicle}}\n                                                        if(tempApp.vehicle.fields[vf.name]){\n                                                            tempApp.vehicle.fields[vf.name].value = e.target.value\n                                                        } else {\n                                                            tempApp.vehicle.fields[vf.name] = {value: e.target.value}\n                                                        }\n                                                        setAppraisalData(tempApp)                                                    \n                                                    }}/>\n                                                </Form.Group>\n                                            </Col>\n                                        })\n                                    }\n                                </Row>\n                            </div>\n                        </Collapse>\n                    </Card.Body>\n                </Card>\n            </Col>\n        </Row>\n        <Row>\n            <Col lg={12}>\n                <Card>\n                    <Card.Body>\n                        <h4 className=\"header-title\" onClick={toggleP}> <i className={ isOpenP ? \"mdi mdi-chevron-down me-1\" : \"mdi mdi-chevron-right me-1\"}></i> Prueba de manejo</h4>\n                        <Collapse in={isOpenP}>\n                            <div>\n                                <Row>\n                                    <Col lg={3}>\n                                        <FormInput\n                                            label={\"Potencia del motor\"}\n                                            type=\"select\"\n                                            name=\"motor_potency\"\n                                            containerClass=\"mb-3\"\n                                            className={\"form-select \" + (((appraisalData.vehicle || {}).motor_potency || \"Bueno\") !== \"Bueno\" ? \"is-invalid\": \"\")}\n                                            key=\"select0\"\n                                            value={(appraisalData.vehicle || {}).motor_potency || \"\"}\n                                            disabled={!allowEdit() || !isInspector()}\n                                            onChange={async (e: any)=>{\n                                                setAppraisalData({...appraisalData,vehicle: {...appraisalData.vehicle, motor_potency: e.target.value}})                                            \n                                            }}\n                                        >\n                                            <option value=\"Bueno\">Bueno</option>\n                                            <option value=\"No tiene\">No tiene</option>\n                                            <option value=\"Leve daño\">Leve daño</option>\n                                            <option value=\"Reparar\">Reparar</option>\n                                        </FormInput>\n                                    </Col>\n                                    <Col lg={3}>\n                                        <FormInput\n                                            label={\"Color de humo\"}\n                                            type=\"select\"\n                                            name=\"smoke_color\"\n                                            containerClass=\"mb-3\"\n                                            className=\"form-select\"\n                                            key=\"select0\"\n                                            value={(appraisalData.vehicle || {}).smoke_color || \"\"}\n                                            disabled={!allowEdit() || !isInspector()}\n                                            onChange={async (e: any)=>{\n                                                setAppraisalData({...appraisalData,vehicle: {...appraisalData.vehicle, smoke_color: e.target.value}})                                            \n                                            }}\n                                        >\n                                            <option value=\"Sin humo\">Sin humo</option>\n                                            <option value=\"Normal\">Normal</option>\n                                            <option value=\"Negro\">Negro</option>\n                                            <option value=\"Celeste\">Celeste</option>\n                                        </FormInput>\n                                    </Col>\n                                    <Col lg={3}>\n                                        <FormInput\n                                            label={\"Temperatura\"}\n                                            type=\"select\"\n                                            name=\"temperature_status\"\n                                            containerClass=\"mb-3\"\n                                            className={\"form-select \" + (((appraisalData.vehicle || {}).temperature_status || \"Normal\") === \"Alta\" ? \"is-invalid\": \"\")}\n                                            key=\"select0\"\n                                            value={(appraisalData.vehicle || {}).temperature_status || \"\"}\n                                            disabled={!allowEdit() || !isInspector()}\n                                            onChange={async (e: any)=>{\n                                                setAppraisalData({...appraisalData,vehicle: {...appraisalData.vehicle, temperature_status: e.target.value}})                                            \n                                            }}\n                                        >\n                                            <option value=\"Normal\">Normal</option>\n                                            <option value=\"Alta\">Alta</option>\n                                        </FormInput>\n                                    </Col>\n                                    <Col lg={3}>\n                                        <FormInput\n                                            label={\"Combustión\"}\n                                            type=\"select\"\n                                            name=\"combustion\"\n                                            containerClass=\"mb-3\"\n                                            key=\"select0\"\n                                            className={\"form-select \" + (((appraisalData.vehicle || {}).combustion || \"Normal\") === \"Revisar\" ? \"is-invalid\": \"\")}\n                                            value={(appraisalData.vehicle || {}).combustion || \"Normal\"}\n                                            disabled={!allowEdit() || !isInspector()}\n                                            onChange={async (e: any)=>{\n                                                setAppraisalData({...appraisalData,vehicle: {...appraisalData.vehicle, combustion: e.target.value}})                                            \n                                            }}\n                                        >\n                                            <option value=\"Normal\">Normal</option>\n                                            <option value=\"Revisar\">Revisar</option>\n                                        </FormInput>\n                                    </Col>\n                                    <Col lg={3}>\n                                        <FormInput\n                                            label={\"Marcha del motor\"}\n                                            type=\"select\"\n                                            name=\"engine_runing\"\n                                            containerClass=\"mb-3\"\n                                            className={\"form-select \" + (((appraisalData.vehicle || {}).engine_runing || \"Normal\") === \"Inestable\" ? \"is-invalid\": \"\")}\n                                            key=\"select0\"\n                                            value={(appraisalData.vehicle || {}).engine_runing || \"\"}\n                                            disabled={!allowEdit() || !isInspector()}\n                                            onChange={async (e: any)=>{\n                                                setAppraisalData({...appraisalData,vehicle: {...appraisalData.vehicle, engine_runing: e.target.value}})                                            \n                                            }}\n                                        >\n                                            <option value=\"Normal\">Normal</option>\n                                            <option value=\"Inestable\">Inestable</option>\n                                            <option value=\"Leve\">Leve</option>\n                                        </FormInput>\n                                    </Col>\n                                    <Col lg={3}>\n                                        <FormInput\n                                            label={\"Sistema aire acondicionado\"}\n                                            type=\"select\"\n                                            name=\"air_conditioning\"\n                                            containerClass=\"mb-3\"\n                                            className={\"form-select \" + (((appraisalData.vehicle || {}).air_conditioning || \"Bueno\") !== \"Bueno\" ? \"is-invalid\": \"\")}\n                                            key=\"select0\"\n                                            value={(appraisalData.vehicle || {}).air_conditioning || \"\"}\n                                            disabled={!allowEdit() || !isInspector()}\n                                            onChange={async (e: any)=>{\n                                                setAppraisalData({...appraisalData,vehicle: {...appraisalData.vehicle, air_conditioning: e.target.value}})                                            \n                                            }}\n                                        >\n                                            <option value=\"Bueno\">Bueno</option>\n                                            <option value=\"No tiene\">No tiene</option>\n                                            <option value=\"Leve daño\">Leve daño</option>\n                                            <option value=\"Reparar\">Reparar</option>\n                                        </FormInput>\n                                    </Col>\n                                    <Col lg={3}>\n                                        <FormInput\n                                            label={\"Tipo de combustible\"}\n                                            type=\"select\"\n                                            name=\"gas\"\n                                            containerClass=\"mb-3\"\n                                            className=\"form-select\"\n                                            key=\"select0\"\n                                            value={(appraisalData.vehicle || {}).gas || \"\"}\n                                            disabled={!allowEdit() || !isInspector()}\n                                            onChange={async (e: any)=>{\n                                                setAppraisalData({...appraisalData,vehicle: {...appraisalData.vehicle, gas: e.target.value}})                                            \n                                            }}\n                                        >\n                                            <option value=\"Diesel\">Diesel</option>\n                                            <option value=\"Gasolina\">Gasolina</option>\n                                            <option value=\"Gasolina\">Hibrido</option>\n                                            <option value=\"Gasolina\">LPG</option>\n                                        </FormInput>\n                                    </Col>\n                                    <Col lg={3}>\n                                        <FormInput\n                                            label={\"Soplo\"}\n                                            type=\"select\"\n                                            name=\"oil\"\n                                            containerClass=\"mb-3\"\n                                            className={\"form-select \" + (((appraisalData.vehicle || {}).oil || \"Normal\") === \"Excesivo\" ? \"is-invalid\": \"\")}\n                                            key=\"select0\"\n                                            value={(appraisalData.vehicle || {}).oil || \"\"}\n                                            disabled={!allowEdit() || !isInspector()}\n                                            onChange={async (e: any)=>{\n                                                setAppraisalData({...appraisalData,vehicle: {...appraisalData.vehicle, oil: e.target.value}})                                            \n                                            }}\n                                        >\n                                            <option value=\"Normal\">Normal</option>\n                                            <option value=\"Leve\">Leve</option>\n                                            <option value=\"Excesivo\">Excesivo</option>\n                                        </FormInput>\n                                    </Col>\n                                    <Col lg={3}>\n                                        <FormInput\n                                            label={\"Herramientas\"}\n                                            type=\"select\"\n                                            name=\"tools\"\n                                            containerClass=\"mb-3\"\n                                            className=\"form-select\"\n                                            key=\"select0\"\n                                            value={((appraisalData.vehicle || {}).tools || \"Tiene\") ? \"Tiene\": \"No tiene\"}\n                                            disabled={!allowEdit() || !isInspector()}\n                                            onChange={async (e: any)=>{\n                                                setAppraisalData({...appraisalData,vehicle: {...appraisalData.vehicle, tools: e.target.value === \"Tiene\"}})                                            \n                                            }}\n                                        >\n                                            <option value=\"Tiene\">Tiene</option>\n                                            <option value=\"No tiene\">No tiene</option>\n                                        </FormInput>\n                                    </Col>\n                                    <Col lg={3}>\n                                        <FormInput\n                                            label={\"Estado del chasis\"}\n                                            type=\"select\"\n                                            name=\"chasis_status\"\n                                            containerClass=\"mb-3\"\n                                            className={\"form-select \" + (((appraisalData.vehicle || {}).chasis_status || \"Bueno\") !== \"Bueno\" ? \"is-invalid\": \"\")}\n                                            key=\"select0\"\n                                            value={(appraisalData.vehicle || {}).chasis_status || \"Bueno\"}\n                                            disabled={!allowEdit() || !isInspector()}\n                                            onChange={async (e: any)=>{\n                                                setAppraisalData({...appraisalData,vehicle: {...appraisalData.vehicle, chasis_status: e.target.value}})                                            \n                                            }}\n                                        >\n                                            <option value=\"Bueno\">Bueno</option>\n                                            <option value=\"No tiene\">No tiene</option>\n                                            <option value=\"Leve daño\">Leve daño</option>\n                                            <option value=\"Reparar\">Reparar</option>\n                                        </FormInput>\n                                    </Col>\n                                    <Col lg={3}>\n                                        <FormInput\n                                            label={\"Check engine\"}\n                                            type=\"select\"\n                                            name=\"check_engine\"\n                                            containerClass=\"mb-3\"\n                                            className={\"form-select \" + (((appraisalData.vehicle || {}).check_engine || \"\") === \"Encendido\" ? \"is-invalid\": \"\")}\n                                            key=\"select0\"\n                                            value={(appraisalData.vehicle || {}).check_engine || \"Normal\"}\n                                            disabled={!allowEdit() || !isInspector()}\n                                            onChange={async (e: any)=>{\n                                                setAppraisalData({...appraisalData,vehicle: {...appraisalData.vehicle, check_engine: e.target.value}})                                            \n                                            }}\n                                        >\n                                            <option value=\"Normal\">Normal</option>\n                                            <option value=\"Encendido\">Encendido</option>\n                                        </FormInput>\n                                    </Col>\n                                    <Col lg={3}>\n                                        <FormInput\n                                            label={\"ABS\"}\n                                            type=\"select\"\n                                            name=\"abs\"\n                                            containerClass=\"mb-3\"\n                                            className=\"form-select\"\n                                            key=\"select0\"\n                                            value={((appraisalData.vehicle || {}).abs) ? \"Tiene\": \"No tiene\"}\n                                            disabled={!allowEdit() || !isInspector()}\n                                            onChange={async (e: any)=>{\n                                                setAppraisalData({...appraisalData,vehicle: {...appraisalData.vehicle, abs: e.target.value === \"Tiene\"}})                                            \n                                            }}\n                                        >\n                                            <option value=\"Tiene\">Tiene</option>\n                                            <option value=\"No tiene\">No tiene</option>\n                                        </FormInput>\n                                    </Col>\n                                    <Col lg={3}>\n                                        <FormInput\n                                            label={\"Bolsas de aire\"}\n                                            type=\"select\"\n                                            name=\"air_bags\"\n                                            containerClass=\"mb-3\"\n                                            className={\"form-select \" + (((appraisalData.vehicle || {}).air_bags || \"Bueno\") !== \"Bueno\" ? \"is-invalid\": \"\")}\n                                            key=\"select0\"\n                                            value={(appraisalData.vehicle || {}).air_bags || \"\"}\n                                            disabled={!allowEdit() || !isInspector()}\n                                            onChange={async (e: any)=>{\n                                                setAppraisalData({...appraisalData,vehicle: {...appraisalData.vehicle, air_bags: e.target.value}})                                            \n                                            }}\n                                        >\n                                            <option value=\"Bueno\">Bueno</option>\n                                            <option value=\"No tiene\">No tiene</option>\n                                            <option value=\"Leve daño\">Leve daño</option>\n                                            <option value=\"Reparar\">Reparar</option>\n                                        </FormInput>\n                                    </Col>\n                                    <Col lg={3}>\n                                        <FormInput\n                                            label={\"Turbo\"}\n                                            type=\"select\"\n                                            name=\"turbo\"\n                                            containerClass=\"mb-3\"\n                                            className={\"form-select \" + (((appraisalData.vehicle || {}).turbo || \"Bueno\") !== \"Bueno\" ? \"is-invalid\": \"\")}\n                                            key=\"select0\"\n                                            value={(appraisalData.vehicle || {}).turbo || \"\"}\n                                            disabled={!allowEdit() || !isInspector()}\n                                            onChange={async (e: any)=>{\n                                                setAppraisalData({...appraisalData,vehicle: {...appraisalData.vehicle, turbo: e.target.value}})                                            \n                                            }}\n                                        >\n                                            <option value=\"Bueno\">Bueno</option>\n                                            <option value=\"No tiene\">No tiene</option>\n                                            <option value=\"Leve daño\">Leve daño</option>\n                                            <option value=\"Reparar\">Reparar</option>\n                                        </FormInput>\n                                    </Col>\n                                    <Col lg={3}>\n                                        <FormInput\n                                            label={\"ODM\"}\n                                            type=\"select\"\n                                            name=\"odm\"\n                                            containerClass=\"mb-3\"\n                                            className={\"form-select \" + (((appraisalData.vehicle || {}).odm || \"Bueno\") !== \"Bueno\" ? \"is-invalid\": \"\")}\n                                            key=\"select0\"\n                                            value={(appraisalData.vehicle || {}).odm || \"\"}\n                                            disabled={!allowEdit() || !isInspector()}\n                                            onChange={async (e: any)=>{\n                                                setAppraisalData({...appraisalData,vehicle: {...appraisalData.vehicle, odm: e.target.value}})                                            \n                                            }}\n                                        >\n                                            <option value=\"Bueno\">Bueno</option>\n                                            <option value=\"No tiene\">No tiene</option>\n                                            <option value=\"Leve daño\">Leve daño</option>\n                                            <option value=\"Reparar\">Reparar</option>\n                                        </FormInput>\n                                    </Col>\n                                    <Col lg={3}>\n                                        <FormInput\n                                            label={\"Velo\"}\n                                            type=\"select\"\n                                            name=\"velo\"\n                                            containerClass=\"mb-3\"\n                                            className={\"form-select \" + (((appraisalData.vehicle || {}).velo || \"Bueno\") !== \"Bueno\" ? \"is-invalid\": \"\")}\n                                            key=\"select0\"\n                                            value={(appraisalData.vehicle || {}).velo || \"\"}\n                                            disabled={!allowEdit() || !isInspector()}\n                                            onChange={async (e: any)=>{\n                                                setAppraisalData({...appraisalData,vehicle: {...appraisalData.vehicle, velo: e.target.value}})                                            \n                                            }}\n                                        >\n                                            <option value=\"Bueno\">Bueno</option>\n                                            <option value=\"No tiene\">No tiene</option>\n                                            <option value=\"Leve daño\">Leve daño</option>\n                                            <option value=\"Reparar\">Reparar</option>\n                                        </FormInput>\n                                    </Col>\n                                    <Col lg={3}>\n                                        <FormInput\n                                            label={\"TPMS\"}\n                                            type=\"select\"\n                                            name=\"tpms\"\n                                            containerClass=\"mb-3\"\n                                            className={\"form-select \" + (((appraisalData.vehicle || {}).tpms || \"Bueno\") !== \"Bueno\" ? \"is-invalid\": \"\")}\n                                            key=\"select0\"\n                                            value={(appraisalData.vehicle || {}).tpms || \"\"}\n                                            disabled={!allowEdit() || !isInspector()}\n                                            onChange={async (e: any)=>{\n                                                setAppraisalData({...appraisalData,vehicle: {...appraisalData.vehicle, tpms: e.target.value}})                                            \n                                            }}\n                                        >\n                                            <option value=\"Bueno\">Bueno</option>\n                                            <option value=\"No tiene\">No tiene</option>\n                                            <option value=\"Leve daño\">Leve daño</option>\n                                            <option value=\"Reparar\">Reparar</option>\n                                        </FormInput>\n                                    </Col>\n                                    \n                                    \n                                    <Col lg={3}>\n                                        <FormInput\n                                            label={\"Traccion\"}\n                                            type=\"select\"\n                                            name=\"notes\"\n                                            containerClass=\"mb-3\"\n                                            className={\"form-select\"}\n                                            key=\"select0\"\n                                            value={(appraisalData.vehicle || {}).notes || \"4x4\"}\n                                            disabled={!allowEdit() || !isInspector()}\n                                            onChange={async (e: any)=>{\n                                                setAppraisalData({...appraisalData,vehicle: {...appraisalData.vehicle, notes: e.target.value}})                                            \n                                            }}\n                                        >\n                                            <option value=\"4x4\">4x4</option>\n                                            <option value=\"4x2\">4x2</option>\n                                        </FormInput>                                        \n                                    </Col>\n                                    <Col lg={3}>\n                                        <Form.Group className=\"mb-3\" controlId=\"validationCustom01\">\n                                            <Form.Label>Estado de bateria</Form.Label>\n                                            <Form.Control disabled={!allowEdit() || !isInspector()} value={(appraisalData.vehicle || {}).battery_status || \"\"} type=\"text\" onChange={async (e: any)=>{\n                                                setAppraisalData({...appraisalData,vehicle: {...appraisalData.vehicle, battery_status: e.target.value}})\n                                            \n                                            }}/>\n                                        </Form.Group>\n                                    </Col>\n                                    <Col lg={3}>\n                                        <Form.Group className=\"mb-3\" controlId=\"validationCustom01\">\n                                            <Form.Label>Rines y llantas</Form.Label>\n                                            <Form.Control disabled={!allowEdit() || !isInspector()} value={(appraisalData.vehicle || {}).wheels_tires || \"\"} type=\"text\" onChange={async (e: any)=>{\n                                                setAppraisalData({...appraisalData,vehicle: {...appraisalData.vehicle, wheels_tires: e.target.value}})\n                                            \n                                            }}/>\n                                        </Form.Group>\n                                    </Col>\n                                    <Col lg={3}>\n                                        <FormInput\n                                            label={\"Llanta de repuesto\"}\n                                            type=\"select\"\n                                            name=\"spare_tire\"\n                                            containerClass=\"mb-3\"\n                                            className=\"form-select\"\n                                            key=\"select0\"\n                                            value={((appraisalData.vehicle || {}).spare_tire || \"\") ? \"Tiene\": \"No tiene\"}\n                                            disabled={!allowEdit() || !isInspector()}\n                                            onChange={async (e: any)=>{\n                                                setAppraisalData({...appraisalData,vehicle: {...appraisalData.vehicle, spare_tire: e.target.value === \"Tiene\"}})                                            \n                                            }}\n                                        >\n                                            <option value=\"Tiene\">Tiene</option>\n                                            <option value=\"No tiene\">No tiene</option>\n                                        </FormInput>\n                                    </Col>\n                                    <Col lg={6}>\n                                        <Form.Group className=\"mb-3\" controlId=\"validationCustom01\">\n                                            <Form.Label>Compresion</Form.Label>\n                                            <Row>\n                                                <Col lg={1} style={{padding: \"3px\"}}>\n                                                    <Form.Control placeholder='1' disabled={!allowEdit() || !isInspector()} value={(appraisalData.vehicle || {}).compression1 || \"\"} type=\"text\" onChange={async (e: any)=>{\n                                                        setAppraisalData({...appraisalData,vehicle: {...appraisalData.vehicle, compression1: e.target.value}})                                            \n                                                    }}/>\n                                                </Col>\n                                                <Col lg={1} style={{padding: \"3px\"}}>\n                                                    <Form.Control placeholder='2' disabled={!allowEdit() || !isInspector()} value={(appraisalData.vehicle || {}).compression2 || \"\"} type=\"text\" onChange={async (e: any)=>{\n                                                        setAppraisalData({...appraisalData,vehicle: {...appraisalData.vehicle, compression2: e.target.value}})                                            \n                                                    }}/>\n                                                </Col>\n                                                <Col lg={1} style={{padding: \"3px\"}}>\n                                                    <Form.Control placeholder='3' disabled={!allowEdit() || !isInspector()} value={(appraisalData.vehicle || {}).compression3 || \"\"} type=\"text\" onChange={async (e: any)=>{\n                                                        setAppraisalData({...appraisalData,vehicle: {...appraisalData.vehicle, compression3: e.target.value}})                                            \n                                                    }}/>\n                                                </Col>\n                                                <Col lg={1} style={{padding: \"3px\"}}>\n                                                    <Form.Control placeholder='4' disabled={!allowEdit() || !isInspector()} value={(appraisalData.vehicle || {}).compression4 || \"\"} type=\"text\" onChange={async (e: any)=>{\n                                                        setAppraisalData({...appraisalData,vehicle: {...appraisalData.vehicle, compression4: e.target.value}})                                            \n                                                    }}/>\n                                                </Col>\n                                                <Col lg={1} style={{padding: \"3px\"}}>\n                                                    <Form.Control placeholder='5' disabled={!allowEdit() || !isInspector()} value={(appraisalData.vehicle || {}).compression5 || \"\"} type=\"text\" onChange={async (e: any)=>{\n                                                        setAppraisalData({...appraisalData,vehicle: {...appraisalData.vehicle, compression5: e.target.value}})                                            \n                                                    }}/>\n                                                </Col>\n                                                <Col lg={1} style={{padding: \"3px\"}}>\n                                                    <Form.Control placeholder='6' disabled={!allowEdit() || !isInspector()} value={(appraisalData.vehicle || {}).compression6 || \"\"} type=\"text\" onChange={async (e: any)=>{\n                                                        setAppraisalData({...appraisalData,vehicle: {...appraisalData.vehicle, compression6: e.target.value}})                                            \n                                                    }}/>\n                                                </Col>\n                                                <Col lg={1} style={{padding: \"3px\"}}>\n                                                    <Form.Control placeholder='7' disabled={!allowEdit() || !isInspector()} value={(appraisalData.vehicle || {}).compression7 || \"\"} type=\"text\" onChange={async (e: any)=>{\n                                                        setAppraisalData({...appraisalData,vehicle: {...appraisalData.vehicle, compression7: e.target.value}})                                            \n                                                    }}/>\n                                                </Col>\n                                                <Col lg={1} style={{padding: \"3px\"}}>\n                                                    <Form.Control placeholder='8' disabled={!allowEdit() || !isInspector()} value={(appraisalData.vehicle || {}).compression8 || \"\"} type=\"text\" onChange={async (e: any)=>{\n                                                        setAppraisalData({...appraisalData,vehicle: {...appraisalData.vehicle, compression8: e.target.value}})                                            \n                                                    }}/>\n                                                </Col>\n                                                <Col lg={1} style={{padding: \"3px\"}}>\n                                                    <Form.Control placeholder='9' disabled={!allowEdit() || !isInspector()} value={(appraisalData.vehicle || {}).compression9 || \"\"} type=\"text\" onChange={async (e: any)=>{\n                                                        setAppraisalData({...appraisalData,vehicle: {...appraisalData.vehicle, compression9: e.target.value}})                                            \n                                                    }}/>\n                                                </Col>\n                                                <Col lg={1} style={{padding: \"3px\"}}>\n                                                    <Form.Control placeholder='10' disabled={!allowEdit() || !isInspector()} value={(appraisalData.vehicle || {}).compression10 || \"\"} type=\"text\" onChange={async (e: any)=>{\n                                                        setAppraisalData({...appraisalData,vehicle: {...appraisalData.vehicle, compression10: e.target.value}})                                            \n                                                    }}/>\n                                                </Col>\n                                            </Row>\n                                        </Form.Group>\n                                    </Col>\n                                    <Col lg={3}>\n                                        <FormInput\n                                            label={\"Transmision\"}\n                                            type=\"select\"\n                                            name=\"transmision\"\n                                            containerClass=\"mb-3\"\n                                            className={\"form-select\"}\n                                            key=\"select0\"\n                                            value={(appraisalData.vehicle || {}).transmision || \"\"}\n                                            disabled={!allowEdit() || !isInspector()}\n                                            onChange={async (e: any)=>{\n                                                setAppraisalData({...appraisalData,vehicle: {...appraisalData.vehicle, transmision: e.target.value}})                                            \n                                            }}\n                                        >\n                                            <option value=\"Automatica\">Automatica</option>\n                                            <option value=\"Secuencial\">Secuencial</option>\n                                            <option value=\"Tiptronic\">Tiptronic</option>\n                                            <option value=\"CVT\">CVT</option>\n                                            <option value=\"Manual\">Manual</option>\n                                        </FormInput>\n                                    </Col>\n                                    <Col lg={3} hidden={(appraisalData.vehicle || {}).transmision !== \"Manual\"}>\n                                        <Form.Group className=\"mb-3\" controlId=\"validationCustom01\">\n                                            <Form.Label>Número de velocidades</Form.Label>\n                                            <Form.Control  disabled={!allowEdit() || !isInspector()} value={(appraisalData.vehicle || {}).num_vel || \"\"} type=\"text\" onChange={async (e: any)=>{\n                                                setAppraisalData({...appraisalData,vehicle: {...appraisalData.vehicle, num_vel: e.target.value}})\n                                            \n                                            }}/>\n                                        </Form.Group>\n                                    </Col>\n                                </Row>\n                            </div>\n                        </Collapse>\n                    </Card.Body>\n                </Card>\n            </Col>\n        </Row>\n        <Row>\n            <Col lg={12}>\n                <Card>\n                    <Card.Body>\n                        <h4 className=\"header-title\">Inspección mecanica</h4>\n                        <Row>\n                            <Col lg={12}>\n                                <div className=\"inspection-sections\">\n                                    {\n                                        Object.keys(templateData).map(inspectionSection => {\n                                            return <div className=\"inspection-section\" key={inspectionSection}>\n                                                <h3>{inspectionSection}</h3>\n                                                <table className=\"inspection-list col-12 text-center\">\n                                                    <thead>\n                                                        <tr>\n                                                            <th className='col-3 text-start'>Descripción</th>\n                                                            <th>Bueno</th>\n                                                            <th>Dañado</th>\n                                                            <th>Precio</th>\n                                                            <th>Notas</th>\n                                                            <th>Fotos</th>                                                \n                                                        </tr>\n                                                    </thead>\n                                                    <tbody>\n\n                                                        {\n                                                            templateData[inspectionSection].map((inspectionItem: any, key: any) => {\n                                                                return <tr key={inspectionSection + key}>\n                                                                    <td className='text-start'>\n                                                                        {inspectionItem.name}\n                                                                    </td>\n                                                                    <td>\n                                                                        <Form.Group className=\"mb-1 ms-2\">\n                                                                            <Form.Check checked={inspectionItem.good || false} disabled={!allowEdit() || !isInspector()} type=\"checkbox\" id={\"1\"} name={\"customRadio\"+1} onChange={(e) => {\n                                                                                let copyTemplate = {...templateData}\n                                                                                copyTemplate[inspectionSection] = templateData[inspectionSection].map((value2: any, key2: any)=>{\n                                                                                    if(key2 === key) return {...value2, good: e.target.checked, damaged: e.target.checked && value2.damaged ? false : value2.damaged}\n                                                                                    return value2\n                                                                                })\n                                                                                setTemplateData(copyTemplate)\n                                                                            }}/>\n                                                                        </Form.Group>\n                                                                    </td>\n                                                                    <td>\n                                                                        <Form.Group className=\"mb-1 ms-2\">\n                                                                            <Form.Check checked={inspectionItem.damaged || false} disabled={!allowEdit() || !isInspector()} type=\"checkbox\" id={\"2\"} name={\"customRadio\"+2} onChange={(e) => {\n                                                                                let copyTemplate = {...templateData}\n                                                                                copyTemplate[inspectionSection] = templateData[inspectionSection].map((value2: any, key2: any)=>{\n                                                                                    if(key2 === key) return {...value2, damaged:e.target.checked, good: e.target.checked && value2.good ? false : value2.good}\n                                                                                    return value2\n                                                                                })\n                                                                                setTemplateData(copyTemplate)\n                                                                            }}/>\n                                                                        </Form.Group>\n                                                                    </td>\n                                                                    <td className='col-1'>\n                                                                        <Form.Group>\n                                                                            <Form.Control value={inspectionItem.price || 0} isInvalid={inspectionItem.damaged && inspectionItem.price <= 0} disabled={!allowEdit() || !isInspector()} type=\"text\" id={\"3\"} name={\"customRadio\"+3} onChange={(e) => {\n                                                                                let copyTemplate = {...templateData}\n                                                                                copyTemplate[inspectionSection] = templateData[inspectionSection].map((value2: any, key2: any)=>{\n                                                                                    if(key2 === key) return {...value2, price: parseFloat(e.target.value)}\n                                                                                    return value2\n                                                                                })\n                                                                                setTemplateData(copyTemplate)\n                                                                            }}/>\n                                                                        </Form.Group>\n                                                                    </td>\n                                                                    <td>\n                                                                        <Form.Group>\n                                                                            <Form.Control value={inspectionItem.notes || \"\"} isInvalid={inspectionItem.damaged && (inspectionItem.notes === \"\" || !inspectionItem.notes)} disabled={!allowEdit() || !isInspector()} type=\"text\" id={\"4\"} name={\"customRadio\"+4} onChange={(e) => {\n                                                                                let copyTemplate = {...templateData}\n                                                                                copyTemplate[inspectionSection] = templateData[inspectionSection].map((value2: any, key2: any)=>{\n                                                                                    if(key2 === key) return {...value2, notes: e.target.value}\n                                                                                    return value2\n                                                                                })\n                                                                                setTemplateData(copyTemplate)\n                                                                            }}/>\n                                                                        </Form.Group>\n                                                                    </td>\n                                                                    <td className='col-3 display-flex'>\n                                                                        <div className=\"uploadImage\" hidden={!allowEdit() || !isInspector()}>\n                                                                            <label htmlFor={\"file-input\"+inspectionSection+\"-\"+key}>\n                                                                                <img className='avatar-md rounded' src={photoIcon} style={{pointerEvents: \"none\"}} alt=\"\"/>\n                                                                            </label>\n                                                                            <input  id={\"file-input\"+inspectionSection+\"-\"+key} type=\"file\" onChange={(e)=>{\n                                                                                let fileReader = new FileReader();\n                                                                                fileReader.onload = (e: any) => {\n                                                                                    const { result } = e.target;\n                                                                                    if (result) {\n                                                                                        let copyTemplate = {...templateData}\n                                                                                        copyTemplate[inspectionSection] = templateData[inspectionSection].map((value2: any, key2: any)=>{\n                                                                                            if(key2 === key) return {...value2, images: (value2.images || []).concat(result)}\n                                                                                            return value2\n                                                                                        })\n                                                                                        setTemplateData(copyTemplate)\n                                                                                    }\n                                                                                }\n                                                                                if(e.target.files && e.target.files.length > 0)\n                                                                                    fileReader.readAsDataURL(e.target.files[0]);\n                                                                            }}/>\n                                                                        </div>\n                                                                        {(inspectionItem.images || []).map((src: any, index: any) => (\n                                                                            <img\n                                                                            className='avatar-md rounded'\n                                                                            src={ src }\n                                                                            onClick={ () => openImageViewer(index,inspectionItem.images || []) }\n                                                                            width=\"300\"\n                                                                            key={ index }\n                                                                            style={{ margin: '2px' }}\n                                                                            alt=\"\"\n                                                                            />\n                                                                        ))}\n                                                                        {isViewerOpen && (\n                                                                            <ImageViewer\n                                                                            src={ viewerImages || [] }\n                                                                            currentIndex={ currentImage }\n                                                                            disableScroll={ true }\n                                                                            closeOnClickOutside={ true }\n                                                                            onClose={ closeImageViewer }\n                                                                            />\n                                                                        )}\n                                                                    </td>\n                                                                    \n                                                                </tr>\n                                                            })\n                                                        }\n                                                    </tbody>\n                                                </table>\n                                            </div>\n                                        })\n                                    }\n                                </div>\n                            </Col>\n                        </Row>\n                    </Card.Body>\n                </Card>\n            </Col>\n        </Row>\n        <Row>\n            <Col lg={12}>\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title\">Inspeccion Fisica</h4>\n                            <Evaluate allowPrices={true} allowEdit={allowEdit() && isInspector()} appraisalId={params[\"id\"]} status={appraisalData.status} vehicleType={appraisalData.vehicle_type?.vector}/>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        <Row className='sticky-buttons'>    \n            <Col>\n                <Link hidden={!allowEdit() || !isInspector()} to=\"#\" className=\"btn btn-blue rounded-pill w-md waves-effect waves-light mb-3\" onClick={async () => {\n                    setLoading(true)\n                    let copyTemplate = {...templateData}\n                    await Object.keys(copyTemplate).reduce(async (groupPromise: any, group: any) => {\n                        await groupPromise\n\n                        await copyTemplate[group].reduce(async (itemPromise: any, item: any) => {\n                            await itemPromise\n                            if(item.images && item.images.length > 0){\n                                await item.images.reduce(async (imagePromise: any, image: any) => {\n                                    await imagePromise\n                                    if(!image.includes(\".png\")){\n                                        let newUpl = await saveImage({\n                                            file: dataURItoBlob(image),\n                                            description: \"Foto info\",\n                                            name: Date.now() + \".png\"\n                                        })\n        \n                                        if(newUpl.data.meta.code === 200) {\n                                            copyTemplate[group] = copyTemplate[group].map((value2: any, key2: any)=>{\n                                                if(item.inspection_item_id === value2.inspection_item_id) return {...value2, newImages: (value2.newImages || []).concat(newUpl.data.data)}\n                                                return value2\n                                            })\n                                        }\n                                    }\n                                    return Promise.resolve()\n                                }, Promise.resolve())\n                            }\n    \n                            return Promise.resolve()\n                        }, Promise.resolve())\n\n                        return Promise.resolve()\n                    }, Promise.resolve())\n                    let result = await saveInspection({\n                        vehicleData: appraisalData.vehicle,\n                        templateData: copyTemplate,\n                        appraisalId: appraisalData.appraisal_id\n                    })\n                    if(result.data.meta.code === 200){\n                        loadTemplate(appraisalData.appraisal_id)\n                    }else {\n                        swal.fire(\"Error\",result.data.data.error.message,\"error\")\n                    }\n                    setLoading(false)\n                }}>\n                    <i className=\"mdi mdi-content-save me-1\"></i>\n                    Guardar\n                </Link>\n                <Link hidden={!isInspector() || appraisalData.status !== \"En inspección\"} to=\"#\" className=\"btn btn-success rounded-pill w-md waves-effect waves-light mb-3 ms-1\" onClick={async () => {\n                    let res = await swal.fire({\n                        title: '¿Estas seguro de terminar la inspección?',\n                        text: \"Se dara por terminada la inspección mecanica\",\n                        icon: 'warning',\n                        showCancelButton: true,\n                        confirmButtonColor: '#28bb4b',\n                        cancelButtonColor: '#f34e4e',\n                        confirmButtonText: 'Si, Terminar!',\n                    })\n                    if (res.isConfirmed) {\n                        setLoading(true)\n                        let result: any = await endInspection({appraisalId: appraisalData.appraisal_id})\n                        setLoading(false)\n                        if(result.data.meta.code === 200){\n                            navigate(\"/appraisal/inspection\", { replace: true });\n                        }else {\n                            swal.fire(\"Error\",result.data.data.error.message,\"error\")\n                        }\n                    }\n                }}>\n                    <i className=\"mdi mdi-check me-1\"></i>\n                    Finalizar inspección \n                </Link>\n                {appraisalData.status && <Link hidden={appraisalData.status === \"Inspeccionado\" || appraisalData.inspected_for_two} to=\"#\" className=\"ms-1 btn btn-info rounded-pill w-md waves-effect waves-light mb-3\" onClick={async () => {\n                    let res = await swal.fire({\n                        title: '¿Estas seguro de iniciar la inspección?',\n                        text: \"Se te asignara este vehiculo y deberas completar la inspección mecanica\",\n                        icon: 'warning',\n                        showCancelButton: true,\n                        confirmButtonColor: '#28bb4b',\n                        cancelButtonColor: '#f34e4e',\n                        confirmButtonText: 'Si, Iniciar!',\n                    })\n                    if (res.isConfirmed) {\n                        setLoading(true)\n                        let result: any = await startInspection({appraisalId: appraisalData.appraisal_id})\n                        setLoading(false)\n                        if(result.data.meta.code === 200){\n                            loadTemplate(appraisalData.appraisal_id)\n                        }else {\n                            swal.fire(\"Error\",result.data.data.error.message,\"error\")\n                        }\n                    }\n\n                    }}>\n                        <i className=\"mdi mdi-content-paste me-1\"></i>\n                        Iniciar inspección\n                </Link>}\n                {appraisalData.status && <Link hidden={appraisalData.status === \"Inspeccionado\" || !appraisalData.inspected_for_one || appraisalData.inspected_for_two === loggedInUser.user_id || appraisalData.inspected_for_one === loggedInUser.user_id } to=\"#\" className=\"ms-1 btn btn-info rounded-pill w-md waves-effect waves-light mb-3\" onClick={async () => {\n                    let res = await swal.fire({\n                        title: '¿Estas seguro de unirte a la inspección?',\n                        text: \"Se te asignara este vehiculo y ayudaras a completar la inspección mecanica\",\n                        icon: 'warning',\n                        showCancelButton: true,\n                        confirmButtonColor: '#28bb4b',\n                        cancelButtonColor: '#f34e4e',\n                        confirmButtonText: 'Si, Unirme!',\n                    })\n                    if (res.isConfirmed) {\n                        setLoading(true)\n                        let result: any = await startInspection({appraisalId: appraisalData.appraisal_id})\n                        setLoading(false)\n                        if(result.data.meta.code === 200){\n                            loadTemplate(appraisalData.appraisal_id)\n                        }else {\n                            swal.fire(\"Error\",result.data.data.error.message,\"error\")\n                        }\n                    }\n\n                    }}>\n                        <i className=\"mdi mdi-content-paste me-1\"></i>\n                        Unirme a la inspección\n                </Link>}\n            </Col>\n        </Row>\n        <Loader2  loading={loading}/>\n    </>;\n};\n\nexport default InspectionDetail;\n","/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nfunction createChainedFunction(...funcs) {\n  return funcs.filter(f => f != null).reduce((acc, f) => {\n    if (typeof f !== 'function') {\n      throw new Error('Invalid Argument Type, must only provide functions, undefined, or null.');\n    }\n\n    if (acc === null) return f;\n    return function chainedFunction(...args) {\n      // @ts-ignore\n      acc.apply(this, args); // @ts-ignore\n\n      f.apply(this, args);\n    };\n  }, null);\n}\n\nexport default createChainedFunction;","import classNames from 'classnames';\nimport css from 'dom-helpers/css';\nimport React, { useMemo } from 'react';\nimport { ENTERED, ENTERING, EXITED, EXITING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport createChainedFunction from './createChainedFunction';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst MARGINS = {\n  height: ['marginTop', 'marginBottom'],\n  width: ['marginLeft', 'marginRight']\n};\n\nfunction getDefaultDimensionValue(dimension, elem) {\n  const offset = `offset${dimension[0].toUpperCase()}${dimension.slice(1)}`;\n  const value = elem[offset];\n  const margins = MARGINS[dimension];\n  return value + // @ts-ignore\n  parseInt(css(elem, margins[0]), 10) + // @ts-ignore\n  parseInt(css(elem, margins[1]), 10);\n}\n\nconst collapseStyles = {\n  [EXITED]: 'collapse',\n  [EXITING]: 'collapsing',\n  [ENTERING]: 'collapsing',\n  [ENTERED]: 'collapse show'\n};\nconst defaultProps = {\n  in: false,\n  timeout: 300,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  getDimensionValue: getDefaultDimensionValue\n};\nconst Collapse = /*#__PURE__*/React.forwardRef(({\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  className,\n  children,\n  dimension = 'height',\n  getDimensionValue = getDefaultDimensionValue,\n  ...props\n}, ref) => {\n  /* Compute dimension */\n  const computedDimension = typeof dimension === 'function' ? dimension() : dimension;\n  /* -- Expanding -- */\n\n  const handleEnter = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = '0';\n  }, onEnter), [computedDimension, onEnter]);\n  const handleEntering = useMemo(() => createChainedFunction(elem => {\n    const scroll = `scroll${computedDimension[0].toUpperCase()}${computedDimension.slice(1)}`;\n    elem.style[computedDimension] = `${elem[scroll]}px`;\n  }, onEntering), [computedDimension, onEntering]);\n  const handleEntered = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onEntered), [computedDimension, onEntered]);\n  /* -- Collapsing -- */\n\n  const handleExit = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = `${getDimensionValue(computedDimension, elem)}px`;\n    triggerBrowserReflow(elem);\n  }, onExit), [onExit, getDimensionValue, computedDimension]);\n  const handleExiting = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onExiting), [computedDimension, onExiting]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    \"aria-expanded\": props.role ? props.in : null,\n    onEnter: handleEnter,\n    onEntering: handleEntering,\n    onEntered: handleEntered,\n    onExit: handleExit,\n    onExiting: handleExiting,\n    childRef: children.ref,\n    children: (state, innerProps) => /*#__PURE__*/React.cloneElement(children, { ...innerProps,\n      className: classNames(className, children.props.className, collapseStyles[state], computedDimension === 'width' && 'collapse-horizontal')\n    })\n  });\n}); // @ts-ignore\n\n// @ts-ignore\nCollapse.defaultProps = defaultProps;\nexport default Collapse;","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React, { CSSProperties, useCallback, useEffect, useState } from \"react\";\nimport styles from \"./styles.module.css\";\n\ninterface IProps {\n  src: string[];\n  currentIndex?: number;\n  backgroundStyle?: CSSProperties;\n  disableScroll?: boolean;\n  closeOnClickOutside?: boolean;\n  onClose?: () => void;\n  closeComponent?: JSX.Element;\n  leftArrowComponent?: JSX.Element;\n  rightArrowComponent?: JSX.Element;\n}\n\nconst ReactSimpleImageViewer = (props: IProps) => {\n  const [currentIndex, setCurrentIndex] = useState(props.currentIndex ?? 0);\n\n  const changeImage = useCallback(\n    (delta: number) => {\n      let nextIndex = (currentIndex + delta) % props.src.length;\n      if (nextIndex < 0) nextIndex = props.src.length - 1;\n      setCurrentIndex(nextIndex);\n    },\n    [currentIndex]\n  );\n\n  const handleClick = useCallback(\n    (event: any) => {\n      if (!event.target || !props.closeOnClickOutside) {\n        return;\n      }\n\n      const checkId = event.target.id === 'ReactSimpleImageViewer';\n      const checkClass = event.target.classList.contains('react-simple-image-viewer__slide');\n\n      if (checkId || checkClass) {\n        event.stopPropagation();\n        props.onClose?.();\n      }\n    },\n    [props.onClose]\n  );\n\n  const handleKeyDown = useCallback(\n    (event: any) => {\n      if (event.key === \"Escape\") {\n        props.onClose?.();\n      }\n\n      if ([\"ArrowLeft\", \"h\"].includes(event.key)) {\n        changeImage(-1);\n      }\n\n      if ([\"ArrowRight\", \"l\"].includes(event.key)) {\n        changeImage(1);\n      }\n    },\n    [props.onClose, changeImage]\n  );\n\n  const handleWheel = useCallback(\n    (event: any) => {\n      if (event.wheelDeltaY > 0) {\n        changeImage(-1);\n      } else {\n        changeImage(1);\n      }\n    },\n    [changeImage]\n  );\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", handleKeyDown);\n\n    if (!props.disableScroll) {\n      document.addEventListener(\"wheel\", handleWheel);\n    }\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n\n      if (!props.disableScroll) {\n        document.removeEventListener(\"wheel\", handleWheel);\n      }\n    };\n  }, [handleKeyDown, handleWheel]);\n\n  return (\n    <div\n      id=\"ReactSimpleImageViewer\"\n      className={`${styles.wrapper} react-simple-image-viewer__modal`}\n      onKeyDown={handleKeyDown}\n      onClick={handleClick}\n      style={props.backgroundStyle}\n    >\n      <span\n        className={`${styles.close} react-simple-image-viewer__close`}\n        onClick={() => props.onClose?.()}\n      >\n        { props.closeComponent || \"×\" }\n      </span>\n\n      {props.src.length > 1 && (\n        <span\n          className={`${styles.navigation} ${styles.prev} react-simple-image-viewer__previous`}\n          onClick={() => changeImage(-1)}\n        >\n          { props.leftArrowComponent || \"❮\" }\n        </span>\n      )}\n\n      {props.src.length > 1 && (\n        <span\n          className={`${styles.navigation} ${styles.next} react-simple-image-viewer__next`}\n          onClick={() => changeImage(1)}\n        >\n          { props.rightArrowComponent || \"❯\" }\n        </span>\n      )}\n\n      <div\n        className={`${styles.content} react-simple-image-viewer__modal-content`}\n        onClick={handleClick}\n      >\n        <div className={`${styles.slide} react-simple-image-viewer__slide`}>\n          <img className={styles.image} src={props.src[currentIndex]} alt=\"\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ReactSimpleImageViewer;\n"],"names":["variant","avatar","name","emailId","position","className","style","padding","src","alt","classNames","api","APICore","getInspectionTemplate","params","get","startInspection","create","endInspection","saveInspection","getCerts","getCertPDF","cancelCert","validateCert","saveCert","sendCertEmail","useParams","useState","loading","setLoading","isOpenV","setIsOpenV","isOpenP","setIsOpenP","appraisalData","setAppraisalData","allVehicleTypes","setAllVehicleTypes","vehicleTypeSelected","setVehicleTypeSelected","brands","setBrands","selectedBrand","setSelectedBrand","models","setModels","selectedModel","setSelectedModel","vehicleFields","setVehicleFields","templateData","setTemplateData","useUser","loggedInUser","navigate","useNavigate","viewerImages","setViewerImages","currentImage","setCurrentImage","isViewerOpen","setIsViewerOpen","openImageViewer","useCallback","index","images","closeImageViewer","usePageTitle","title","breadCrumbItems","path","label","active","onChangeBrand","n","length","vehicle","brand","Make_Name","loadModels","Make_ID","onChangeModel","model","Model_Name","loadBrands","getBrands","response","data","Results","brandId","getModelsByBrand","loadFields","vehicleTypeId","getVehicleFields","result","onChangeVehicleType","vehicleTypes","vehicle_type_id","vehicle_type","vector","loadTemplate","id","loadVehicleTypes","appraisalId","meta","code","swal","error","message","getAppraisalDetail","resultAppraisal","Model_ID","getAllVehicleTypes","map","vt","status_color","useEffect","console","log","dataURItoBlob","dataURI","byteString","atob","split","mimeString","ab","ArrayBuffer","ia","Uint8Array","i","charCodeAt","Blob","type","isInspector","status","role","inspected_for_one","user_id","inspected_for_two","allowEdit","marginTop","hidden","inspectors","u","xl","md","profile_picture_url","email","user_type_name","lg","onClick","in","controlId","labelKey","multiple","maxResults","onChange","options","placeholder","selected","disabled","miles_type","value","miles","e","target","plate","vin","onBlur","getVehicleByVin","vehicle_id","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","allowNew","motor","year","wheels","eq_sound","vf","key","fields","tempApp","containerClass","motor_potency","smoke_color","temperature_status","combustion","engine_runing","air_conditioning","gas","oil","tools","chasis_status","check_engine","abs","air_bags","turbo","odm","velo","tpms","notes","battery_status","wheels_tires","spare_tire","compression1","compression2","compression3","compression4","compression5","compression6","compression7","compression8","compression9","compression10","transmision","num_vel","Object","keys","inspectionSection","inspectionItem","checked","good","copyTemplate","value2","key2","damaged","price","isInvalid","parseFloat","htmlFor","photoIcon","pointerEvents","fileReader","FileReader","onload","concat","files","readAsDataURL","width","margin","currentIndex","disableScroll","closeOnClickOutside","onClose","allowPrices","vehicleType","to","reduce","groupPromise","group","itemPromise","item","imagePromise","image","includes","saveImage","file","description","Date","now","newUpl","inspection_item_id","newImages","Promise","resolve","vehicleData","appraisal_id","text","isConfirmed","replace","funcs","filter","f","acc","Error","args","apply","this","MARGINS","height","getDefaultDimensionValue","dimension","elem","toUpperCase","slice","margins","parseInt","css","collapseStyles","EXITED","EXITING","ENTERING","ENTERED","defaultProps","timeout","mountOnEnter","unmountOnExit","appear","getDimensionValue","Collapse","React","ref","onEnter","onEntering","onEntered","onExit","onExiting","children","props","computedDimension","handleEnter","useMemo","createChainedFunction","handleEntering","scroll","handleEntered","handleExit","triggerBrowserReflow","handleExiting","_jsx","TransitionWrapper","addEndListener","transitionEndListener","childRef","state","innerProps","insertAt","document","head","getElementsByTagName","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","ReactSimpleImageViewer","setCurrentIndex","changeImage","delta","nextIndex","handleClick","event","checkId","checkClass","classList","contains","stopPropagation","handleKeyDown","handleWheel","wheelDeltaY","addEventListener","removeEventListener","styles","onKeyDown","backgroundStyle","closeComponent","leftArrowComponent","rightArrowComponent"],"sourceRoot":""}