{"version":3,"file":"static/js/1385.84895337.chunk.js","mappings":"0QAgBMA,EAAe,SAAH,GAAwF,IAAlFC,EAAQ,EAARA,SAAUC,EAAQ,EAARA,SAAUC,EAAc,EAAdA,eAAgBC,EAAS,EAATA,UAAWC,EAAQ,EAARA,SAC3DC,GAAmBC,EAAAA,EAAAA,YAAWC,EAAAA,GAA9BF,eAEFG,GAAmBC,EAAAA,EAAAA,GAAmBR,GAAU,kBAAMG,GAAYA,EAASH,MAE3ES,EAAoBL,IAAmBJ,EAE7C,OACI,eAAIU,UAAWT,EAAe,UAC1B,SAAC,KAAI,CACDU,GAAG,IACHD,UAAWE,GAAAA,CAAWV,EAAW,CAC7BW,WAAYJ,IAEhBK,QAASP,EAAiB,SAEzBR,OA8MjB,UAxMY,WAiBR,OAfAgB,EAAAA,EAAAA,IAAa,CACTC,MAAO,OACPC,gBAAiB,CACb,CACIC,KAAM,aACNC,MAAO,eAEX,CACID,KAAM,aACNC,MAAO,OACPC,QAAQ,OAMhB,SAAC,IAAG,WACA,SAAC,IAAG,CAACC,GAAI,GAAG,UACR,SAAC,IAAI,WACD,UAAC,SAAS,YACN,SAAC,IAAG,CAACX,UAAU,yBAAwB,UACnC,SAAC,IAAG,CAACW,GAAI,EAAE,UACP,iBAAKX,UAAU,cAAa,WACxB,wDACA,cAAGA,UAAU,aAAY,0LAMzB,SAAC,IAAM,CAACY,QAAQ,UAAUZ,UAAU,qCAAoC,qCAGxE,SAAC,IAAM,CAACY,QAAQ,UAAUZ,UAAU,gCAA+B,qCAM/E,UAAC,IAAG,CAACA,UAAU,8BAA6B,WACxC,SAAC,IAAG,CAACa,GAAI,EAAE,UACP,gBAAKb,UAAU,MAAK,UAChB,UAAC,IAAS,CAACA,UAAU,mBAAmBc,iBAAiB,IAAG,WACxD,UAAC,IAAI,CAACd,UAAU,OAAM,WAClB,SAAC,WAAW,CAACA,UAAU,WAAU,UAC7B,SAACZ,EAAY,CAACE,SAAS,IAAIC,eAAe,MAAMC,UAAU,YAAW,qCAIzE,SAAC,aAAkB,CAACF,SAAS,IAAG,UAC5B,UAAC,SAAS,YACN,kRAMA,cAAGU,UAAU,OAAM,iOAdH,IAuB5B,UAAC,IAAI,CAACA,UAAU,OAAM,WAClB,SAAC,WAAW,CAACA,UAAU,WAAU,UAC7B,SAACZ,EAAY,CAACE,SAAS,IAAIC,eAAe,MAAMC,UAAU,YAAW,yCAIzE,SAAC,aAAkB,CAACF,SAAS,IAAG,UAC5B,UAAC,SAAS,YACN,kRAMA,cAAGU,UAAU,OAAM,iOAdH,IAuB5B,UAAC,IAAI,CAACA,UAAU,OAAM,WAClB,SAAC,WAAW,CAACA,UAAU,WAAU,UAC7B,SAACZ,EAAY,CAACE,SAAS,IAAIC,eAAe,MAAMC,UAAU,YAAW,qCAIzE,SAAC,aAAkB,CAACF,SAAS,IAAG,UAC5B,UAAC,SAAS,YACN,kRAMA,cAAGU,UAAU,OAAM,iOAdH,WA0BxC,SAAC,IAAG,CAACa,GAAI,EAAE,UACP,gBAAKb,UAAU,MAAK,UAChB,UAAC,IAAS,CAACA,UAAU,mBAAmBc,iBAAiB,IAAG,WACxD,UAAC,IAAI,CAACd,UAAU,OAAM,WAClB,SAAC,WAAW,CAACA,UAAU,WAAU,UAC7B,SAACZ,EAAY,CAACE,SAAS,IAAIC,eAAe,MAAMC,UAAU,YAAW,oCAIzE,SAAC,aAAkB,CAACF,SAAS,IAAG,UAC5B,UAAC,SAAS,YACN,kRAMA,cAAGU,UAAU,OAAM,iOAdH,IAuB5B,UAAC,IAAI,CAACA,UAAU,OAAM,WAClB,SAAC,WAAW,CAACA,UAAU,WAAU,UAC7B,SAACZ,EAAY,CAACE,SAAS,IAAIC,eAAe,MAAMC,UAAU,YAAW,2CAIzE,SAAC,aAAkB,CAACF,SAAS,IAAG,UAC5B,UAAC,SAAS,YACN,kRAMA,cAAGU,UAAU,OAAM,iOAdH,IAuB5B,UAAC,IAAI,CAACA,UAAU,OAAM,WAClB,SAAC,WAAW,CAACA,UAAU,WAAU,UAC7B,SAACZ,EAAY,CAACE,SAAS,IAAIC,eAAe,MAAMC,UAAU,YAAW,qCAIzE,SAAC,aAAkB,CAACF,SAAS,IAAG,UAC5B,UAAC,SAAS,YACN,kRAMA,cAAGU,UAAU,OAAM,iOAdH,wB,sBCrMpE,SAASe,IAEP,IAAIC,EAAQC,KAAKC,YAAYC,yBAAyBF,KAAKG,MAAOH,KAAKD,OACzD,OAAVA,QAA4BK,IAAVL,GACpBC,KAAKK,SAASN,GAIlB,SAASO,EAA0BC,GAQjCP,KAAKK,SALL,SAAiBG,GACf,IAAIT,EAAQC,KAAKC,YAAYC,yBAAyBK,EAAWC,GACjE,OAAiB,OAAVT,QAA4BK,IAAVL,EAAsBA,EAAQ,MAGnCU,KAAKT,OAG7B,SAASU,EAAoBH,EAAWI,GACtC,IACE,IAAIC,EAAYZ,KAAKG,MACjBK,EAAYR,KAAKD,MACrBC,KAAKG,MAAQI,EACbP,KAAKD,MAAQY,EACbX,KAAKa,6BAA8B,EACnCb,KAAKc,wBAA0Bd,KAAKe,wBAClCH,EACAJ,GAEF,QACAR,KAAKG,MAAQS,EACbZ,KAAKD,MAAQS,GAUjB,SAASQ,EAASC,GAChB,IAAIC,EAAYD,EAAUC,UAE1B,IAAKA,IAAcA,EAAUC,iBAC3B,MAAM,IAAIC,MAAM,sCAGlB,GACgD,oBAAvCH,EAAUf,0BAC4B,oBAAtCgB,EAAUH,wBAEjB,OAAOE,EAMT,IAAII,EAAqB,KACrBC,EAA4B,KAC5BC,EAAsB,KAgB1B,GAf4C,oBAAjCL,EAAUpB,mBACnBuB,EAAqB,qBACmC,oBAAxCH,EAAUM,4BAC1BH,EAAqB,6BAE4B,oBAAxCH,EAAUZ,0BACnBgB,EAA4B,4BACmC,oBAA/CJ,EAAUO,mCAC1BH,EAA4B,oCAEe,oBAAlCJ,EAAUR,oBACnBa,EAAsB,sBACmC,oBAAzCL,EAAUQ,6BAC1BH,EAAsB,8BAGC,OAAvBF,GAC8B,OAA9BC,GACwB,OAAxBC,EACA,CACA,IAAII,EAAgBV,EAAUW,aAAeX,EAAUY,KACnDC,EAC4C,oBAAvCb,EAAUf,yBACb,6BACA,4BAEN,MAAMkB,MACJ,2FACEO,EACA,SACAG,EACA,uDACwB,OAAvBT,EAA8B,OAASA,EAAqB,KAC9B,OAA9BC,EACG,OAASA,EACT,KACqB,OAAxBC,EAA+B,OAASA,EAAsB,IATjE,wIA0BJ,GARkD,oBAAvCN,EAAUf,2BACnBgB,EAAUpB,mBAAqBA,EAC/BoB,EAAUZ,0BAA4BA,GAMS,oBAAtCY,EAAUH,wBAAwC,CAC3D,GAA4C,oBAAjCG,EAAUa,mBACnB,MAAM,IAAIX,MACR,qHAIJF,EAAUR,oBAAsBA,EAEhC,IAAIqB,EAAqBb,EAAUa,mBAEnCb,EAAUa,mBAAqB,SAC7BnB,EACAJ,EACAwB,GAUA,IAAIC,EAAWjC,KAAKa,4BAChBb,KAAKc,wBACLkB,EAEJD,EAAmBG,KAAKlC,KAAMY,EAAWJ,EAAWyB,IAIxD,OAAOhB,E,8CA7GTnB,EAAmBqC,8BAA+B,EAClD7B,EAA0B6B,8BAA+B,EACzDzB,EAAoByB,8BAA+B,G,6HChB5C,SAASC,EAAWC,GACzB,MAAO,UAAYA,EAAIC,OAAO,GAAGC,cAAgBF,EAAIG,OAAO,GC7B9D,SAASC,EAAeC,GAAO,IAAIL,EAEnC,SAAsBM,EAAOC,GAAQ,GAAqB,kBAAVD,GAAgC,OAAVA,EAAgB,OAAOA,EAAO,IAAIE,EAAOF,EAAMG,OAAOC,aAAc,QAAa3C,IAATyC,EAAoB,CAAE,IAAIG,EAAMH,EAAKX,KAAKS,EAAOC,GAAQ,WAAY,GAAmB,kBAARI,EAAkB,OAAOA,EAAK,MAAM,IAAIC,UAAU,gDAAmD,OAAiB,WAATL,EAAoBM,OAASC,QAAQR,GAFvUS,CAAaV,EAAK,UAAW,MAAsB,kBAARL,EAAmBA,EAAMa,OAAOb,GAOpH,SAASgB,EAAoBC,EAAWC,EAAcC,GACpD,IAAIC,GAAaC,EAAAA,EAAAA,aAAqBtD,IAAdkD,GAEpBK,GAAYC,EAAAA,EAAAA,UAASL,GACrBM,EAAaF,EAAU,GACvBtD,EAAWsD,EAAU,GAErBG,OAAuB1D,IAAdkD,EACTS,EAAUN,EAAWO,QAWzB,OAVAP,EAAWO,QAAUF,GAMhBA,GAAUC,GAAWF,IAAeN,GACvClD,EAASkD,GAGJ,CAACO,EAASR,EAAYO,GAAYI,EAAAA,EAAAA,cAAY,SAAUC,GAC7D,IAAK,IAAIC,EAAOC,UAAUC,OAAQC,EAAO,IAAIC,MAAMJ,EAAO,EAAIA,EAAO,EAAI,GAAIK,EAAO,EAAGA,EAAOL,EAAMK,IAClGF,EAAKE,EAAO,GAAKJ,UAAUI,GAGzBhB,GAASA,EAAQiB,WAAM,EAAQ,CAACP,GAAOQ,OAAOJ,IAClDjE,EAAS6D,KACR,CAACV,KAIS,SAASmB,EAAgBxE,EAAOyE,GAC7C,OAAOC,OAAOC,KAAKF,GAAQG,QAAO,SAAUC,EAAQC,GAClD,IAAIC,EAEAC,EAAOH,EACPzB,EAAe4B,EAAKC,EAAiBH,IACrCI,EAAaF,EAAKF,GAClBK,GAAOC,EAAAA,EAAAA,GAA8BJ,EAAM,CAACC,EAAiBH,GAAYA,GAAWO,IAAI/C,IAExFgD,EAAcb,EAAOK,GAErBS,EAAuBrC,EAAoBgC,EAAY9B,EAAcpD,EAAMsF,IAC3EvB,EAAQwB,EAAqB,GAC7BlC,EAAUkC,EAAqB,GAEnC,OAAOC,EAAAA,EAAAA,GAAS,GAAIL,IAAOJ,EAAY,IAAcD,GAAaf,EAAOgB,EAAUO,GAAejC,EAAS0B,MAC1G/E,G","sources":["pages/other/FAQ.tsx","../node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js","../node_modules/uncontrollable/lib/esm/utils.js","../node_modules/uncontrollable/lib/esm/hook.js"],"sourcesContent":["import classNames from 'classnames';\nimport { useContext } from 'react';\nimport { Accordion, AccordionContext, Button, Card, Col, Row, useAccordionButton } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\n// hooks\nimport { usePageTitle } from '../../hooks';\n\ntype CustomToggleProps = {\n    children: React.ReactNode;\n    eventKey: string;\n    containerClass: string;\n    linkClass: string;\n    callback?: any;\n};\n\nconst CustomToggle = ({ children, eventKey, containerClass, linkClass, callback }: CustomToggleProps) => {\n    const { activeEventKey } = useContext(AccordionContext);\n\n    const decoratedOnClick = useAccordionButton(eventKey, () => callback && callback(eventKey));\n\n    const isCurrentEventKey = activeEventKey === eventKey;\n\n    return (\n        <h5 className={containerClass}>\n            <Link\n                to=\"#\"\n                className={classNames(linkClass, {\n                    collapsed: !isCurrentEventKey,\n                })}\n                onClick={decoratedOnClick}\n            >\n                {children}\n            </Link>\n        </h5>\n    );\n};\n\nconst FAQ = () => {\n    // set pagetitle\n    usePageTitle({\n        title: 'FAQs',\n        breadCrumbItems: [\n            {\n                path: '/pages/faq',\n                label: 'Extra Pages',\n            },\n            {\n                path: '/pages/faq',\n                label: 'FAQs',\n                active: true,\n            },\n        ],\n    });\n\n    return (\n        <Row>\n            <Col sm={12}>\n                <Card>\n                    <Card.Body>\n                        <Row className=\"justify-content-center\">\n                            <Col sm={6}>\n                                <div className=\"text-center\">\n                                    <h3>Frequently Asked Questions</h3>\n                                    <p className=\"text-muted\">\n                                        Nisi praesentium similique totam odio obcaecati, reprehenderit, dignissimos rem\n                                        temporibus ea inventore alias! Beatae animi nemo ea tempora, temporibus laborum\n                                        facilis ut!\n                                    </p>\n\n                                    <Button variant=\"success\" className=\"waves-effect waves-light mt-1 me-1\">\n                                        Email us your question\n                                    </Button>\n                                    <Button variant=\"primary\" className=\"waves-effect waves-light mt-1\">\n                                        Send us a tweet\n                                    </Button>\n                                </div>\n                            </Col>\n                        </Row>\n                        <Row className=\"mt-4 justify-content-center\">\n                            <Col xl={5}>\n                                <div className=\"p-2\">\n                                    <Accordion className=\"custom-accordion\" defaultActiveKey=\"0\">\n                                        <Card className=\"mb-2\" key={0}>\n                                            <Card.Header className=\"bg-light\">\n                                                <CustomToggle eventKey=\"0\" containerClass=\"m-0\" linkClass=\"text-dark\">\n                                                    What is Lorem Ipsum?\n                                                </CustomToggle>\n                                            </Card.Header>\n                                            <Accordion.Collapse eventKey=\"0\">\n                                                <Card.Body>\n                                                    <p>\n                                                        Lorem Ipsum is simply dummy text of the printing and typesetting\n                                                        industry. Lorem Ipsum has been the industry's standard dummy\n                                                        text ever since the 1500s, when an unknown printer took a galley\n                                                        of type and scrambled it to make a type specimen book.\n                                                    </p>\n                                                    <p className=\"mb-0\">\n                                                        Anim pariatur cliche reprehenderit, enim eiusmod high life\n                                                        accusamus terry richardson ad squid. 3 wolf moon officia aute,\n                                                        non cupidatat skateboard dolor brunch. Food truck quinoa\n                                                        nesciunt laborum eiusmod.\n                                                    </p>\n                                                </Card.Body>\n                                            </Accordion.Collapse>\n                                        </Card>\n                                        <Card className=\"mb-2\" key={0}>\n                                            <Card.Header className=\"bg-light\">\n                                                <CustomToggle eventKey=\"1\" containerClass=\"m-0\" linkClass=\"text-dark\">\n                                                    Is safe use Lorem Ipsum?\n                                                </CustomToggle>\n                                            </Card.Header>\n                                            <Accordion.Collapse eventKey=\"1\">\n                                                <Card.Body>\n                                                    <p>\n                                                        Lorem Ipsum is simply dummy text of the printing and typesetting\n                                                        industry. Lorem Ipsum has been the industry's standard dummy\n                                                        text ever since the 1500s, when an unknown printer took a galley\n                                                        of type and scrambled it to make a type specimen book.\n                                                    </p>\n                                                    <p className=\"mb-0\">\n                                                        Anim pariatur cliche reprehenderit, enim eiusmod high life\n                                                        accusamus terry richardson ad squid. 3 wolf moon officia aute,\n                                                        non cupidatat skateboard dolor brunch. Food truck quinoa\n                                                        nesciunt laborum eiusmod.\n                                                    </p>\n                                                </Card.Body>\n                                            </Accordion.Collapse>\n                                        </Card>\n                                        <Card className=\"mb-2\" key={0}>\n                                            <Card.Header className=\"bg-light\">\n                                                <CustomToggle eventKey=\"2\" containerClass=\"m-0\" linkClass=\"text-dark\">\n                                                    Why use Lorem Ipsum?\n                                                </CustomToggle>\n                                            </Card.Header>\n                                            <Accordion.Collapse eventKey=\"2\">\n                                                <Card.Body>\n                                                    <p>\n                                                        Lorem Ipsum is simply dummy text of the printing and typesetting\n                                                        industry. Lorem Ipsum has been the industry's standard dummy\n                                                        text ever since the 1500s, when an unknown printer took a galley\n                                                        of type and scrambled it to make a type specimen book.\n                                                    </p>\n                                                    <p className=\"mb-0\">\n                                                        Anim pariatur cliche reprehenderit, enim eiusmod high life\n                                                        accusamus terry richardson ad squid. 3 wolf moon officia aute,\n                                                        non cupidatat skateboard dolor brunch. Food truck quinoa\n                                                        nesciunt laborum eiusmod.\n                                                    </p>\n                                                </Card.Body>\n                                            </Accordion.Collapse>\n                                        </Card>\n                                    </Accordion>\n                                </div>\n                            </Col>\n                            <Col xl={5}>\n                                <div className=\"p-2\">\n                                    <Accordion className=\"custom-accordion\" defaultActiveKey=\"0\">\n                                        <Card className=\"mb-2\" key={0}>\n                                            <Card.Header className=\"bg-light\">\n                                                <CustomToggle eventKey=\"0\" containerClass=\"m-0\" linkClass=\"text-dark\">\n                                                    License & Copyright\n                                                </CustomToggle>\n                                            </Card.Header>\n                                            <Accordion.Collapse eventKey=\"0\">\n                                                <Card.Body>\n                                                    <p>\n                                                        Lorem Ipsum is simply dummy text of the printing and typesetting\n                                                        industry. Lorem Ipsum has been the industry's standard dummy\n                                                        text ever since the 1500s, when an unknown printer took a galley\n                                                        of type and scrambled it to make a type specimen book.\n                                                    </p>\n                                                    <p className=\"mb-0\">\n                                                        Anim pariatur cliche reprehenderit, enim eiusmod high life\n                                                        accusamus terry richardson ad squid. 3 wolf moon officia aute,\n                                                        non cupidatat skateboard dolor brunch. Food truck quinoa\n                                                        nesciunt laborum eiusmod.\n                                                    </p>\n                                                </Card.Body>\n                                            </Accordion.Collapse>\n                                        </Card>\n                                        <Card className=\"mb-2\" key={0}>\n                                            <Card.Header className=\"bg-light\">\n                                                <CustomToggle eventKey=\"1\" containerClass=\"m-0\" linkClass=\"text-dark\">\n                                                    How many variations exist?\n                                                </CustomToggle>\n                                            </Card.Header>\n                                            <Accordion.Collapse eventKey=\"1\">\n                                                <Card.Body>\n                                                    <p>\n                                                        Lorem Ipsum is simply dummy text of the printing and typesetting\n                                                        industry. Lorem Ipsum has been the industry's standard dummy\n                                                        text ever since the 1500s, when an unknown printer took a galley\n                                                        of type and scrambled it to make a type specimen book.\n                                                    </p>\n                                                    <p className=\"mb-0\">\n                                                        Anim pariatur cliche reprehenderit, enim eiusmod high life\n                                                        accusamus terry richardson ad squid. 3 wolf moon officia aute,\n                                                        non cupidatat skateboard dolor brunch. Food truck quinoa\n                                                        nesciunt laborum eiusmod.\n                                                    </p>\n                                                </Card.Body>\n                                            </Accordion.Collapse>\n                                        </Card>\n                                        <Card className=\"mb-2\" key={0}>\n                                            <Card.Header className=\"bg-light\">\n                                                <CustomToggle eventKey=\"2\" containerClass=\"m-0\" linkClass=\"text-dark\">\n                                                    Why use Lorem Ipsum?\n                                                </CustomToggle>\n                                            </Card.Header>\n                                            <Accordion.Collapse eventKey=\"2\">\n                                                <Card.Body>\n                                                    <p>\n                                                        Lorem Ipsum is simply dummy text of the printing and typesetting\n                                                        industry. Lorem Ipsum has been the industry's standard dummy\n                                                        text ever since the 1500s, when an unknown printer took a galley\n                                                        of type and scrambled it to make a type specimen book.\n                                                    </p>\n                                                    <p className=\"mb-0\">\n                                                        Anim pariatur cliche reprehenderit, enim eiusmod high life\n                                                        accusamus terry richardson ad squid. 3 wolf moon officia aute,\n                                                        non cupidatat skateboard dolor brunch. Food truck quinoa\n                                                        nesciunt laborum eiusmod.\n                                                    </p>\n                                                </Card.Body>\n                                            </Accordion.Collapse>\n                                        </Card>\n                                    </Accordion>\n                                </div>\n                            </Col>\n                        </Row>\n                    </Card.Body>\n                </Card>\n            </Col>\n        </Row>\n    );\n};\n\nexport default FAQ;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nfunction componentWillMount() {\n  // Call this.constructor.gDSFP to support sub-classes.\n  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\n  if (state !== null && state !== undefined) {\n    this.setState(state);\n  }\n}\n\nfunction componentWillReceiveProps(nextProps) {\n  // Call this.constructor.gDSFP to support sub-classes.\n  // Use the setState() updater to ensure state isn't stale in certain edge cases.\n  function updater(prevState) {\n    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\n    return state !== null && state !== undefined ? state : null;\n  }\n  // Binding \"this\" is important for shallow renderer support.\n  this.setState(updater.bind(this));\n}\n\nfunction componentWillUpdate(nextProps, nextState) {\n  try {\n    var prevProps = this.props;\n    var prevState = this.state;\n    this.props = nextProps;\n    this.state = nextState;\n    this.__reactInternalSnapshotFlag = true;\n    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(\n      prevProps,\n      prevState\n    );\n  } finally {\n    this.props = prevProps;\n    this.state = prevState;\n  }\n}\n\n// React may warn about cWM/cWRP/cWU methods being deprecated.\n// Add a flag to suppress these warnings for this special case.\ncomponentWillMount.__suppressDeprecationWarning = true;\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\ncomponentWillUpdate.__suppressDeprecationWarning = true;\n\nfunction polyfill(Component) {\n  var prototype = Component.prototype;\n\n  if (!prototype || !prototype.isReactComponent) {\n    throw new Error('Can only polyfill class components');\n  }\n\n  if (\n    typeof Component.getDerivedStateFromProps !== 'function' &&\n    typeof prototype.getSnapshotBeforeUpdate !== 'function'\n  ) {\n    return Component;\n  }\n\n  // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n  // Error if any of these lifecycles are present,\n  // Because they would work differently between older and newer (16.3+) versions of React.\n  var foundWillMountName = null;\n  var foundWillReceivePropsName = null;\n  var foundWillUpdateName = null;\n  if (typeof prototype.componentWillMount === 'function') {\n    foundWillMountName = 'componentWillMount';\n  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\n    foundWillMountName = 'UNSAFE_componentWillMount';\n  }\n  if (typeof prototype.componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'componentWillReceiveProps';\n  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n  }\n  if (typeof prototype.componentWillUpdate === 'function') {\n    foundWillUpdateName = 'componentWillUpdate';\n  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\n    foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n  }\n  if (\n    foundWillMountName !== null ||\n    foundWillReceivePropsName !== null ||\n    foundWillUpdateName !== null\n  ) {\n    var componentName = Component.displayName || Component.name;\n    var newApiName =\n      typeof Component.getDerivedStateFromProps === 'function'\n        ? 'getDerivedStateFromProps()'\n        : 'getSnapshotBeforeUpdate()';\n\n    throw Error(\n      'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n        componentName +\n        ' uses ' +\n        newApiName +\n        ' but also contains the following legacy lifecycles:' +\n        (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') +\n        (foundWillReceivePropsName !== null\n          ? '\\n  ' + foundWillReceivePropsName\n          : '') +\n        (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') +\n        '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' +\n        'https://fb.me/react-async-component-lifecycle-hooks'\n    );\n  }\n\n  // React <= 16.2 does not support static getDerivedStateFromProps.\n  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n  // Newer versions of React will ignore these lifecycles if gDSFP exists.\n  if (typeof Component.getDerivedStateFromProps === 'function') {\n    prototype.componentWillMount = componentWillMount;\n    prototype.componentWillReceiveProps = componentWillReceiveProps;\n  }\n\n  // React <= 16.2 does not support getSnapshotBeforeUpdate.\n  // As a workaround, use cWU to invoke the new lifecycle.\n  // Newer versions of React will ignore that lifecycle if gSBU exists.\n  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\n    if (typeof prototype.componentDidUpdate !== 'function') {\n      throw new Error(\n        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'\n      );\n    }\n\n    prototype.componentWillUpdate = componentWillUpdate;\n\n    var componentDidUpdate = prototype.componentDidUpdate;\n\n    prototype.componentDidUpdate = function componentDidUpdatePolyfill(\n      prevProps,\n      prevState,\n      maybeSnapshot\n    ) {\n      // 16.3+ will not execute our will-update method;\n      // It will pass a snapshot value to did-update though.\n      // Older versions will require our polyfilled will-update value.\n      // We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n      // Because for <= 15.x versions this might be a \"prevContext\" object.\n      // We also can't just check \"__reactInternalSnapshot\",\n      // Because get-snapshot might return a falsy value.\n      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\n      var snapshot = this.__reactInternalSnapshotFlag\n        ? this.__reactInternalSnapshot\n        : maybeSnapshot;\n\n      componentDidUpdate.call(this, prevProps, prevState, snapshot);\n    };\n  }\n\n  return Component;\n}\n\nexport { polyfill };\n","import invariant from 'invariant';\n\nvar noop = function noop() {};\n\nfunction readOnlyPropType(handler, name) {\n  return function (props, propName) {\n    if (props[propName] !== undefined) {\n      if (!props[handler]) {\n        return new Error(\"You have provided a `\" + propName + \"` prop to `\" + name + \"` \" + (\"without an `\" + handler + \"` handler prop. This will render a read-only field. \") + (\"If the field should be mutable use `\" + defaultKey(propName) + \"`. \") + (\"Otherwise, set `\" + handler + \"`.\"));\n      }\n    }\n  };\n}\n\nexport function uncontrolledPropTypes(controlledValues, displayName) {\n  var propTypes = {};\n  Object.keys(controlledValues).forEach(function (prop) {\n    // add default propTypes for folks that use runtime checks\n    propTypes[defaultKey(prop)] = noop;\n\n    if (process.env.NODE_ENV !== 'production') {\n      var handler = controlledValues[prop];\n      !(typeof handler === 'string' && handler.trim().length) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Uncontrollable - [%s]: the prop `%s` needs a valid handler key name in order to make it uncontrollable', displayName, prop) : invariant(false) : void 0;\n      propTypes[prop] = readOnlyPropType(handler, displayName);\n    }\n  });\n  return propTypes;\n}\nexport function isProp(props, prop) {\n  return props[prop] !== undefined;\n}\nexport function defaultKey(key) {\n  return 'default' + key.charAt(0).toUpperCase() + key.substr(1);\n}\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\nexport function canAcceptRef(component) {\n  return !!component && (typeof component !== 'function' || component.prototype && component.prototype.isReactComponent);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\n\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\nimport { useCallback, useRef, useState } from 'react';\nimport * as Utils from './utils';\n\nfunction useUncontrolledProp(propValue, defaultValue, handler) {\n  var wasPropRef = useRef(propValue !== undefined);\n\n  var _useState = useState(defaultValue),\n      stateValue = _useState[0],\n      setState = _useState[1];\n\n  var isProp = propValue !== undefined;\n  var wasProp = wasPropRef.current;\n  wasPropRef.current = isProp;\n  /**\n   * If a prop switches from controlled to Uncontrolled\n   * reset its value to the defaultValue\n   */\n\n  if (!isProp && wasProp && stateValue !== defaultValue) {\n    setState(defaultValue);\n  }\n\n  return [isProp ? propValue : stateValue, useCallback(function (value) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (handler) handler.apply(void 0, [value].concat(args));\n    setState(value);\n  }, [handler])];\n}\n\nexport { useUncontrolledProp };\nexport default function useUncontrolled(props, config) {\n  return Object.keys(config).reduce(function (result, fieldName) {\n    var _extends2;\n\n    var _ref = result,\n        defaultValue = _ref[Utils.defaultKey(fieldName)],\n        propsValue = _ref[fieldName],\n        rest = _objectWithoutPropertiesLoose(_ref, [Utils.defaultKey(fieldName), fieldName].map(_toPropertyKey));\n\n    var handlerName = config[fieldName];\n\n    var _useUncontrolledProp = useUncontrolledProp(propsValue, defaultValue, props[handlerName]),\n        value = _useUncontrolledProp[0],\n        handler = _useUncontrolledProp[1];\n\n    return _extends({}, rest, (_extends2 = {}, _extends2[fieldName] = value, _extends2[handlerName] = handler, _extends2));\n  }, props);\n}"],"names":["CustomToggle","children","eventKey","containerClass","linkClass","callback","activeEventKey","useContext","AccordionContext","decoratedOnClick","useAccordionButton","isCurrentEventKey","className","to","classNames","collapsed","onClick","usePageTitle","title","breadCrumbItems","path","label","active","sm","variant","xl","defaultActiveKey","componentWillMount","state","this","constructor","getDerivedStateFromProps","props","undefined","setState","componentWillReceiveProps","nextProps","prevState","bind","componentWillUpdate","nextState","prevProps","__reactInternalSnapshotFlag","__reactInternalSnapshot","getSnapshotBeforeUpdate","polyfill","Component","prototype","isReactComponent","Error","foundWillMountName","foundWillReceivePropsName","foundWillUpdateName","UNSAFE_componentWillMount","UNSAFE_componentWillReceiveProps","UNSAFE_componentWillUpdate","componentName","displayName","name","newApiName","componentDidUpdate","maybeSnapshot","snapshot","call","__suppressDeprecationWarning","defaultKey","key","charAt","toUpperCase","substr","_toPropertyKey","arg","input","hint","prim","Symbol","toPrimitive","res","TypeError","String","Number","_toPrimitive","useUncontrolledProp","propValue","defaultValue","handler","wasPropRef","useRef","_useState","useState","stateValue","isProp","wasProp","current","useCallback","value","_len","arguments","length","args","Array","_key","apply","concat","useUncontrolled","config","Object","keys","reduce","result","fieldName","_extends2","_ref","Utils","propsValue","rest","_objectWithoutPropertiesLoose","map","handlerName","_useUncontrolledProp","_extends"],"sourceRoot":""}